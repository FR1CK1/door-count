
RTC_LCD-Display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000119e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000040  00800060  0000119e  00001232  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  008000a0  008000a0  00001272  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001272  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000154c  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a90  00000000  00000000  00002960  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009ee  00000000  00000000  000033f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000024c  00000000  00000000  00003de0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053e  00000000  00000000  0000402c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ea3  00000000  00000000  0000456a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  0000540d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 6a 03 	jmp	0x6d4	; 0x6d4 <__vector_4>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e9       	ldi	r30, 0x9E	; 158
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 3a       	cpi	r26, 0xA0	; 160
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a0 ea       	ldi	r26, 0xA0	; 160
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 3a       	cpi	r26, 0xA4	; 164
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 ce 01 	call	0x39c	; 0x39c <main>
      8a:	0c 94 cd 08 	jmp	0x119a	; 0x119a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <init_timer1>:
 */

void init_timer1(void)		// Zeitmessung bis echo
{
	// Takt im Prescaler durch 8 teilen
	TCCR1B |=  (1<<CS11);
      92:	8e b5       	in	r24, 0x2e	; 46
      94:	82 60       	ori	r24, 0x02	; 2
      96:	8e bd       	out	0x2e, r24	; 46
	TCCR1B &= ~( (1<<CS12) | (1<<CS10) );	// clkI/O / 8 (From prescaler)
      98:	8e b5       	in	r24, 0x2e	; 46
      9a:	8a 7f       	andi	r24, 0xFA	; 250
      9c:	8e bd       	out	0x2e, r24	; 46
      9e:	08 95       	ret

000000a0 <__vector_9>:
	// Overflow Interrupt aktivieren
	// TIMSK |=  (1<<TOIE1);
}

ISR (TIMER1_OVF_vect)	// Überlauf Timer1
{
      a0:	1f 92       	push	r1
      a2:	0f 92       	push	r0
      a4:	0f b6       	in	r0, 0x3f	; 63
      a6:	0f 92       	push	r0
      a8:	11 24       	eor	r1, r1
      aa:	8f 93       	push	r24
	ovf_error = 2;		// Overflow Error setzen --> nicht messbar
      ac:	82 e0       	ldi	r24, 0x02	; 2
      ae:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__data_end>
}
      b2:	8f 91       	pop	r24
      b4:	0f 90       	pop	r0
      b6:	0f be       	out	0x3f, r0	; 63
      b8:	0f 90       	pop	r0
      ba:	1f 90       	pop	r1
      bc:	18 95       	reti

000000be <init_distance>:

void init_distance(void)
{
	init_timer1();
      be:	0e 94 49 00 	call	0x92	; 0x92 <init_timer1>
	UM_PORT_DDRx |= (1<<UM_TRIG);	// Trigger Pin Output
      c2:	a6 9a       	sbi	0x14, 6	; 20
	sei();			// Interrupts global zulassen
      c4:	78 94       	sei
      c6:	08 95       	ret

000000c8 <distance>:
}

float distance(uint8_t amax)
{
      c8:	8f 92       	push	r8
      ca:	9f 92       	push	r9
      cc:	af 92       	push	r10
      ce:	bf 92       	push	r11
      d0:	cf 92       	push	r12
      d2:	df 92       	push	r13
      d4:	ef 92       	push	r14
      d6:	ff 92       	push	r15
      d8:	1f 93       	push	r17
      da:	cf 93       	push	r28
      dc:	df 93       	push	r29
      de:	d8 2f       	mov	r29, r24
	uint8_t a=0;
	uint16_t i=0, tout=0;
	float x=0, x_m=0, t=0;
	const float v_schall = 343.2;		// Schallgeschwindigkeit in trockener Luft
	
	for (a=0; a<amax; a++)
      e0:	88 23       	and	r24, r24
      e2:	09 f4       	brne	.+2      	; 0xe6 <distance+0x1e>
      e4:	5a c0       	rjmp	.+180    	; 0x19a <distance+0xd2>
      e6:	c1 2c       	mov	r12, r1
      e8:	d1 2c       	mov	r13, r1
      ea:	76 01       	movw	r14, r12
      ec:	c0 e0       	ldi	r28, 0x00	; 0
		i = TCNT1;					// Zähler auslesen
		// i = 127;		// das wird korrekt ausgegeben
		t = (i * 8.0 / F_CPU) / 2;	// Zeit für eine Strecke
		if (t > 0.037)
		{
			ovf_error = 4;	// Kein Echo
      ee:	14 e0       	ldi	r17, 0x04	; 4
	const float v_schall = 343.2;		// Schallgeschwindigkeit in trockener Luft
	
	for (a=0; a<amax; a++)
	{
		// Trigger
		UM_PORTx |= (1<<UM_TRIG);	// Trigger setzen
      f0:	ae 9a       	sbi	0x15, 6	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      f2:	2a e1       	ldi	r18, 0x1A	; 26
      f4:	2a 95       	dec	r18
      f6:	f1 f7       	brne	.-4      	; 0xf4 <distance+0x2c>
      f8:	00 c0       	rjmp	.+0      	; 0xfa <distance+0x32>
		_delay_us(10);				// 10 µs warten
		UM_PORTx &= ~(1<<UM_TRIG);	// Trigger löschen
      fa:	ae 98       	cbi	0x15, 6	; 21
		
		tout=0;
		while (!(UM_PORT_PINx & (1<<UM_ECHO)) && (tout<=65536))	// warten, bis Echo gesetzt ist
      fc:	9f 9b       	sbis	0x13, 7	; 19
      fe:	fe cf       	rjmp	.-4      	; 0xfc <distance+0x34>
		{
			tout++;
		}
		
		// Messung beginnen
		TCNT1 = 0;				// Timer 1 auf 0 setzen
     100:	1d bc       	out	0x2d, r1	; 45
     102:	1c bc       	out	0x2c, r1	; 44
		ovf_error = 0;			// Overflow Error rücksetzen
     104:	10 92 a0 00 	sts	0x00A0, r1	; 0x8000a0 <__data_end>
		TIFR &= ~(1<<TOV1);		// ggf. gesetzte Overflow Interrups löschen
     108:	88 b7       	in	r24, 0x38	; 56
     10a:	8b 7f       	andi	r24, 0xFB	; 251
     10c:	88 bf       	out	0x38, r24	; 56
		TIMSK |=  (1<<TOIE1);	// Overflow Interrupt aktivieren
     10e:	89 b7       	in	r24, 0x39	; 57
     110:	84 60       	ori	r24, 0x04	; 4
     112:	89 bf       	out	0x39, r24	; 57
		if (tout==65636)
		{
			ovf_error = 1;		// Overflow Error setzen --> Messung startet nach Trigger nicht
		}
		while (UM_PORT_PINx & (1<<UM_ECHO))		// warten, bis Messung beendet ist
     114:	9f 99       	sbic	0x13, 7	; 19
     116:	fe cf       	rjmp	.-4      	; 0x114 <distance+0x4c>
		{
			;
		}
		i = TCNT1;					// Zähler auslesen
     118:	6c b5       	in	r22, 0x2c	; 44
     11a:	7d b5       	in	r23, 0x2d	; 45
		// i = 127;		// das wird korrekt ausgegeben
		t = (i * 8.0 / F_CPU) / 2;	// Zeit für eine Strecke
     11c:	80 e0       	ldi	r24, 0x00	; 0
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	0e 94 af 04 	call	0x95e	; 0x95e <__floatunsisf>
     124:	20 e0       	ldi	r18, 0x00	; 0
     126:	30 e0       	ldi	r19, 0x00	; 0
     128:	40 e0       	ldi	r20, 0x00	; 0
     12a:	51 e4       	ldi	r21, 0x41	; 65
     12c:	0e 94 66 05 	call	0xacc	; 0xacc <__mulsf3>
     130:	20 e0       	ldi	r18, 0x00	; 0
     132:	34 e2       	ldi	r19, 0x24	; 36
     134:	44 ef       	ldi	r20, 0xF4	; 244
     136:	5a e4       	ldi	r21, 0x4A	; 74
     138:	0e 94 0e 04 	call	0x81c	; 0x81c <__divsf3>
     13c:	20 e0       	ldi	r18, 0x00	; 0
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	40 e0       	ldi	r20, 0x00	; 0
     142:	5f e3       	ldi	r21, 0x3F	; 63
     144:	0e 94 66 05 	call	0xacc	; 0xacc <__mulsf3>
     148:	4b 01       	movw	r8, r22
     14a:	5c 01       	movw	r10, r24
		if (t > 0.037)
     14c:	20 e5       	ldi	r18, 0x50	; 80
     14e:	3d e8       	ldi	r19, 0x8D	; 141
     150:	47 e1       	ldi	r20, 0x17	; 23
     152:	5d e3       	ldi	r21, 0x3D	; 61
     154:	0e 94 61 05 	call	0xac2	; 0xac2 <__gesf2>
     158:	18 16       	cp	r1, r24
     15a:	14 f4       	brge	.+4      	; 0x160 <distance+0x98>
		{
			ovf_error = 4;	// Kein Echo
     15c:	10 93 a0 00 	sts	0x00A0, r17	; 0x8000a0 <__data_end>
		}
		x = v_schall * t;
		x_m = x_m + x;	// Mittelwert bilden: aufaddieren	
     160:	2a e9       	ldi	r18, 0x9A	; 154
     162:	39 e9       	ldi	r19, 0x99	; 153
     164:	4b ea       	ldi	r20, 0xAB	; 171
     166:	53 e4       	ldi	r21, 0x43	; 67
     168:	c5 01       	movw	r24, r10
     16a:	b4 01       	movw	r22, r8
     16c:	0e 94 66 05 	call	0xacc	; 0xacc <__mulsf3>
     170:	9b 01       	movw	r18, r22
     172:	ac 01       	movw	r20, r24
     174:	c7 01       	movw	r24, r14
     176:	b6 01       	movw	r22, r12
     178:	0e 94 9d 03 	call	0x73a	; 0x73a <__addsf3>
     17c:	6b 01       	movw	r12, r22
     17e:	7c 01       	movw	r14, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     180:	8f e7       	ldi	r24, 0x7F	; 127
     182:	98 e3       	ldi	r25, 0x38	; 56
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	81 50       	subi	r24, 0x01	; 1
     188:	90 40       	sbci	r25, 0x00	; 0
     18a:	20 40       	sbci	r18, 0x00	; 0
     18c:	e1 f7       	brne	.-8      	; 0x186 <distance+0xbe>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <distance+0xc8>
     190:	00 00       	nop
	uint8_t a=0;
	uint16_t i=0, tout=0;
	float x=0, x_m=0, t=0;
	const float v_schall = 343.2;		// Schallgeschwindigkeit in trockener Luft
	
	for (a=0; a<amax; a++)
     192:	cf 5f       	subi	r28, 0xFF	; 255
     194:	dc 13       	cpse	r29, r28
     196:	ac cf       	rjmp	.-168    	; 0xf0 <distance+0x28>
     198:	03 c0       	rjmp	.+6      	; 0x1a0 <distance+0xd8>

float distance(uint8_t amax)
{
	uint8_t a=0;
	uint16_t i=0, tout=0;
	float x=0, x_m=0, t=0;
     19a:	c1 2c       	mov	r12, r1
     19c:	d1 2c       	mov	r13, r1
     19e:	76 01       	movw	r14, r12
		x_m = x_m + x;	// Mittelwert bilden: aufaddieren	
		_delay_ms(50);	// mind. 50 ms zwischen zwei Messungen warten
	} // end for
	x_m = x_m / amax;	// Mittelwert berechnen
	
	if (ovf_error == 0)
     1a0:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__data_end>
     1a4:	81 11       	cpse	r24, r1
     1a6:	11 c0       	rjmp	.+34     	; 0x1ca <distance+0x102>
		}
		x = v_schall * t;
		x_m = x_m + x;	// Mittelwert bilden: aufaddieren	
		_delay_ms(50);	// mind. 50 ms zwischen zwei Messungen warten
	} // end for
	x_m = x_m / amax;	// Mittelwert berechnen
     1a8:	6d 2f       	mov	r22, r29
     1aa:	70 e0       	ldi	r23, 0x00	; 0
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 b1 04 	call	0x962	; 0x962 <__floatsisf>
     1b4:	9b 01       	movw	r18, r22
     1b6:	ac 01       	movw	r20, r24
     1b8:	c7 01       	movw	r24, r14
     1ba:	b6 01       	movw	r22, r12
     1bc:	0e 94 0e 04 	call	0x81c	; 0x81c <__divsf3>
	
	if (ovf_error == 0)
	{
		return x_m;		// kein Overflow --> Messwert zurückgeben
     1c0:	56 2f       	mov	r21, r22
     1c2:	47 2f       	mov	r20, r23
     1c4:	38 2f       	mov	r19, r24
     1c6:	29 2f       	mov	r18, r25
     1c8:	10 c0       	rjmp	.+32     	; 0x1ea <distance+0x122>
	}
	else
	{
		return -ovf_error;	// Overflow/Fehler: Fehler zurückgeben
     1ca:	60 91 a0 00 	lds	r22, 0x00A0	; 0x8000a0 <__data_end>
     1ce:	70 e0       	ldi	r23, 0x00	; 0
     1d0:	71 95       	neg	r23
     1d2:	61 95       	neg	r22
     1d4:	71 09       	sbc	r23, r1
     1d6:	07 2e       	mov	r0, r23
     1d8:	00 0c       	add	r0, r0
     1da:	88 0b       	sbc	r24, r24
     1dc:	99 0b       	sbc	r25, r25
     1de:	0e 94 b1 04 	call	0x962	; 0x962 <__floatsisf>
     1e2:	56 2f       	mov	r21, r22
     1e4:	47 2f       	mov	r20, r23
     1e6:	38 2f       	mov	r19, r24
     1e8:	29 2f       	mov	r18, r25
	}	
     1ea:	65 2f       	mov	r22, r21
     1ec:	74 2f       	mov	r23, r20
     1ee:	83 2f       	mov	r24, r19
     1f0:	92 2f       	mov	r25, r18
     1f2:	df 91       	pop	r29
     1f4:	cf 91       	pop	r28
     1f6:	1f 91       	pop	r17
     1f8:	ff 90       	pop	r15
     1fa:	ef 90       	pop	r14
     1fc:	df 90       	pop	r13
     1fe:	cf 90       	pop	r12
     200:	bf 90       	pop	r11
     202:	af 90       	pop	r10
     204:	9f 90       	pop	r9
     206:	8f 90       	pop	r8
     208:	08 95       	ret

0000020a <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
     20a:	96 9a       	sbi	0x12, 6	; 18
     20c:	82 e0       	ldi	r24, 0x02	; 2
     20e:	8a 95       	dec	r24
     210:	f1 f7       	brne	.-4      	; 0x20e <toggle_e+0x4>
     212:	00 c0       	rjmp	.+0      	; 0x214 <toggle_e+0xa>
     214:	96 98       	cbi	0x12, 6	; 18
     216:	08 95       	ret

00000218 <lcd_write>:
     218:	cf 93       	push	r28
     21a:	df 93       	push	r29
     21c:	d8 2f       	mov	r29, r24
     21e:	66 23       	and	r22, r22
     220:	11 f0       	breq	.+4      	; 0x226 <lcd_write+0xe>
     222:	94 9a       	sbi	0x12, 4	; 18
     224:	01 c0       	rjmp	.+2      	; 0x228 <lcd_write+0x10>
     226:	94 98       	cbi	0x12, 4	; 18
     228:	95 98       	cbi	0x12, 5	; 18
     22a:	81 b3       	in	r24, 0x11	; 17
     22c:	8f 60       	ori	r24, 0x0F	; 15
     22e:	81 bb       	out	0x11, r24	; 17
     230:	c2 b3       	in	r28, 0x12	; 18
     232:	c0 7f       	andi	r28, 0xF0	; 240
     234:	8d 2f       	mov	r24, r29
     236:	82 95       	swap	r24
     238:	8f 70       	andi	r24, 0x0F	; 15
     23a:	8c 2b       	or	r24, r28
     23c:	82 bb       	out	0x12, r24	; 18
     23e:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
     242:	df 70       	andi	r29, 0x0F	; 15
     244:	dc 2b       	or	r29, r28
     246:	d2 bb       	out	0x12, r29	; 18
     248:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
     24c:	cf 60       	ori	r28, 0x0F	; 15
     24e:	c2 bb       	out	0x12, r28	; 18
     250:	df 91       	pop	r29
     252:	cf 91       	pop	r28
     254:	08 95       	ret

00000256 <lcd_read>:
     256:	88 23       	and	r24, r24
     258:	11 f0       	breq	.+4      	; 0x25e <lcd_read+0x8>
     25a:	94 9a       	sbi	0x12, 4	; 18
     25c:	01 c0       	rjmp	.+2      	; 0x260 <lcd_read+0xa>
     25e:	94 98       	cbi	0x12, 4	; 18
     260:	95 9a       	sbi	0x12, 5	; 18
     262:	81 b3       	in	r24, 0x11	; 17
     264:	80 7f       	andi	r24, 0xF0	; 240
     266:	81 bb       	out	0x11, r24	; 17
     268:	96 9a       	sbi	0x12, 6	; 18
     26a:	82 e0       	ldi	r24, 0x02	; 2
     26c:	8a 95       	dec	r24
     26e:	f1 f7       	brne	.-4      	; 0x26c <lcd_read+0x16>
     270:	00 c0       	rjmp	.+0      	; 0x272 <lcd_read+0x1c>
     272:	90 b3       	in	r25, 0x10	; 16
     274:	96 98       	cbi	0x12, 6	; 18
     276:	82 e0       	ldi	r24, 0x02	; 2
     278:	8a 95       	dec	r24
     27a:	f1 f7       	brne	.-4      	; 0x278 <lcd_read+0x22>
     27c:	00 c0       	rjmp	.+0      	; 0x27e <lcd_read+0x28>
     27e:	96 9a       	sbi	0x12, 6	; 18
     280:	82 e0       	ldi	r24, 0x02	; 2
     282:	8a 95       	dec	r24
     284:	f1 f7       	brne	.-4      	; 0x282 <lcd_read+0x2c>
     286:	00 c0       	rjmp	.+0      	; 0x288 <lcd_read+0x32>
     288:	20 b3       	in	r18, 0x10	; 16
     28a:	2f 70       	andi	r18, 0x0F	; 15
     28c:	89 2f       	mov	r24, r25
     28e:	82 95       	swap	r24
     290:	80 7f       	andi	r24, 0xF0	; 240
     292:	96 98       	cbi	0x12, 6	; 18
     294:	82 2b       	or	r24, r18
     296:	08 95       	ret

00000298 <lcd_waitbusy>:
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_read>
     29e:	88 23       	and	r24, r24
     2a0:	dc f3       	brlt	.-10     	; 0x298 <lcd_waitbusy>
     2a2:	8a e0       	ldi	r24, 0x0A	; 10
     2a4:	8a 95       	dec	r24
     2a6:	f1 f7       	brne	.-4      	; 0x2a4 <lcd_waitbusy+0xc>
     2a8:	00 c0       	rjmp	.+0      	; 0x2aa <lcd_waitbusy+0x12>
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_read>
     2b0:	08 95       	ret

000002b2 <lcd_command>:
     2b2:	cf 93       	push	r28
     2b4:	c8 2f       	mov	r28, r24
     2b6:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_waitbusy>
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	8c 2f       	mov	r24, r28
     2be:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_write>
     2c2:	cf 91       	pop	r28
     2c4:	08 95       	ret

000002c6 <lcd_gotoxy>:
     2c6:	61 11       	cpse	r22, r1
     2c8:	04 c0       	rjmp	.+8      	; 0x2d2 <lcd_gotoxy+0xc>
     2ca:	80 58       	subi	r24, 0x80	; 128
     2cc:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>
     2d0:	08 95       	ret
     2d2:	80 54       	subi	r24, 0x40	; 64
     2d4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>
     2d8:	08 95       	ret

000002da <lcd_clrscr>:
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>
     2e0:	08 95       	ret

000002e2 <lcd_putc>:
     2e2:	cf 93       	push	r28
     2e4:	c8 2f       	mov	r28, r24
     2e6:	0e 94 4c 01 	call	0x298	; 0x298 <lcd_waitbusy>
     2ea:	ca 30       	cpi	r28, 0x0A	; 10
     2ec:	49 f4       	brne	.+18     	; 0x300 <lcd_putc+0x1e>
     2ee:	80 34       	cpi	r24, 0x40	; 64
     2f0:	10 f0       	brcs	.+4      	; 0x2f6 <lcd_putc+0x14>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	01 c0       	rjmp	.+2      	; 0x2f8 <lcd_putc+0x16>
     2f6:	80 e4       	ldi	r24, 0x40	; 64
     2f8:	80 58       	subi	r24, 0x80	; 128
     2fa:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>
     2fe:	04 c0       	rjmp	.+8      	; 0x308 <lcd_putc+0x26>
     300:	61 e0       	ldi	r22, 0x01	; 1
     302:	8c 2f       	mov	r24, r28
     304:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_write>
     308:	cf 91       	pop	r28
     30a:	08 95       	ret

0000030c <lcd_puts>:
     30c:	cf 93       	push	r28
     30e:	df 93       	push	r29
     310:	ec 01       	movw	r28, r24
     312:	21 96       	adiw	r28, 0x01	; 1
     314:	fc 01       	movw	r30, r24
     316:	80 81       	ld	r24, Z
     318:	88 23       	and	r24, r24
     31a:	29 f0       	breq	.+10     	; 0x326 <lcd_puts+0x1a>
     31c:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_putc>
     320:	89 91       	ld	r24, Y+
     322:	81 11       	cpse	r24, r1
     324:	fb cf       	rjmp	.-10     	; 0x31c <lcd_puts+0x10>
     326:	df 91       	pop	r29
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     32c:	cf 93       	push	r28
     32e:	c8 2f       	mov	r28, r24
      && ( &LCD_RS_PORT == &LCD_DATA0_PORT) && ( &LCD_RW_PORT == &LCD_DATA0_PORT) && (&LCD_E_PORT == &LCD_DATA0_PORT)
      && (LCD_DATA0_PIN == 0 ) && (LCD_DATA1_PIN == 1) && (LCD_DATA2_PIN == 2) && (LCD_DATA3_PIN == 3) 
      && (LCD_RS_PIN == 4 ) && (LCD_RW_PIN == 5) && (LCD_E_PIN == 6 ) )
    {
        /* configure all port bits as output (all LCD lines on same port) */
        DDR(LCD_DATA0_PORT) |= 0x7F;
     330:	81 b3       	in	r24, 0x11	; 17
     332:	8f 67       	ori	r24, 0x7F	; 127
     334:	81 bb       	out	0x11, r24	; 17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     336:	8f ef       	ldi	r24, 0xFF	; 255
     338:	9c e7       	ldi	r25, 0x7C	; 124
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <lcd_init+0xe>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <lcd_init+0x14>
     340:	00 00       	nop
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(LCD_DELAY_BOOTUP);             /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);    // LCD_FUNCTION>>4;
     342:	91 9a       	sbi	0x12, 1	; 18
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);    // LCD_FUNCTION_8BIT>>4;
     344:	90 9a       	sbi	0x12, 0	; 18
    lcd_e_toggle();
     346:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
     34a:	8f e0       	ldi	r24, 0x0F	; 15
     34c:	97 e2       	ldi	r25, 0x27	; 39
     34e:	01 97       	sbiw	r24, 0x01	; 1
     350:	f1 f7       	brne	.-4      	; 0x34e <lcd_init+0x22>
     352:	00 c0       	rjmp	.+0      	; 0x354 <lcd_init+0x28>
     354:	00 00       	nop
    delay(LCD_DELAY_INIT);               /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
     356:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
     35a:	9a ea       	ldi	r25, 0xAA	; 170
     35c:	9a 95       	dec	r25
     35e:	f1 f7       	brne	.-4      	; 0x35c <lcd_init+0x30>
     360:	00 c0       	rjmp	.+0      	; 0x362 <lcd_init+0x36>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
     362:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
     366:	8a ea       	ldi	r24, 0xAA	; 170
     368:	8a 95       	dec	r24
     36a:	f1 f7       	brne	.-4      	; 0x368 <lcd_init+0x3c>
     36c:	00 c0       	rjmp	.+0      	; 0x36e <lcd_init+0x42>
    delay(LCD_DELAY_INIT_REP);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     36e:	90 98       	cbi	0x12, 0	; 18
    lcd_e_toggle();
     370:	0e 94 05 01 	call	0x20a	; 0x20a <toggle_e>
     374:	9a ea       	ldi	r25, 0xAA	; 170
     376:	9a 95       	dec	r25
     378:	f1 f7       	brne	.-4      	; 0x376 <lcd_init+0x4a>
     37a:	00 c0       	rjmp	.+0      	; 0x37c <lcd_init+0x50>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     37c:	88 e2       	ldi	r24, 0x28	; 40
     37e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     382:	88 e0       	ldi	r24, 0x08	; 8
     384:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     388:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     38c:	86 e0       	ldi	r24, 0x06	; 6
     38e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     392:	8c 2f       	mov	r24, r28
     394:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_command>

}/* lcd_init */
     398:	cf 91       	pop	r28
     39a:	08 95       	ret

0000039c <main>:

*/


int main(void)
{
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	cd b7       	in	r28, 0x3d	; 61
     3a2:	de b7       	in	r29, 0x3e	; 62
     3a4:	a0 97       	sbiw	r28, 0x20	; 32
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	de bf       	out	0x3e, r29	; 62
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	cd bf       	out	0x3d, r28	; 61
	char buffer[16]="";		//Buffer für Display
     3b0:	1a 82       	std	Y+2, r1	; 0x02
     3b2:	19 82       	std	Y+1, r1	; 0x01
     3b4:	8e e0       	ldi	r24, 0x0E	; 14
     3b6:	fe 01       	movw	r30, r28
     3b8:	33 96       	adiw	r30, 0x03	; 3
     3ba:	df 01       	movw	r26, r30
     3bc:	28 2f       	mov	r18, r24
     3be:	1d 92       	st	X+, r1
     3c0:	2a 95       	dec	r18
     3c2:	e9 f7       	brne	.-6      	; 0x3be <main+0x22>
	char strline[16] = "";	//string vorbereitet für die Übertragun
     3c4:	1a 8a       	std	Y+18, r1	; 0x12
     3c6:	19 8a       	std	Y+17, r1	; 0x11
     3c8:	70 96       	adiw	r30, 0x10	; 16
     3ca:	df 01       	movw	r26, r30
     3cc:	1d 92       	st	X+, r1
     3ce:	8a 95       	dec	r24
     3d0:	e9 f7       	brne	.-6      	; 0x3cc <main+0x30>
	float dDistanceCal = -1;
	int errorCount = 0;
	bool somebody_here = false;
	
	
	DDRB = 0xff;			//BoardLEDS
     3d2:	8f ef       	ldi	r24, 0xFF	; 255
     3d4:	87 bb       	out	0x17, r24	; 23
	DDRC |= (1 << 1);		//Strom
     3d6:	a1 9a       	sbi	0x14, 1	; 20
	DDRD = 0xff;			//display
     3d8:	81 bb       	out	0x11, r24	; 17
	
	//Zusatzgeräte 1 sek nach Programmstart erst versorgen
	PORTC = 0x00;
     3da:	15 ba       	out	0x15, r1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3dc:	bf ef       	ldi	r27, 0xFF	; 255
     3de:	e9 e6       	ldi	r30, 0x69	; 105
     3e0:	f8 e1       	ldi	r31, 0x18	; 24
     3e2:	b1 50       	subi	r27, 0x01	; 1
     3e4:	e0 40       	sbci	r30, 0x00	; 0
     3e6:	f0 40       	sbci	r31, 0x00	; 0
     3e8:	e1 f7       	brne	.-8      	; 0x3e2 <main+0x46>
     3ea:	00 c0       	rjmp	.+0      	; 0x3ec <main+0x50>
     3ec:	00 00       	nop
	_delay_ms(1000);
	PORTC |= (1 << 1);
     3ee:	a9 9a       	sbi	0x15, 1	; 21
	

	
	// Initiaisierung Display
	lcd_init(LCD_DISP_ON);
     3f0:	8c e0       	ldi	r24, 0x0C	; 12
     3f2:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_init>
	lcd_clrscr();
     3f6:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_clrscr>
	
	//Kalibrierung Ultraschall
	
	init_distance();		//initialisierung Ultraschall
     3fa:	0e 94 5f 00 	call	0xbe	; 0xbe <init_distance>
	
	//1. Zeile
	memset(buffer, 0, 16);
     3fe:	68 94       	set
     400:	ff 24       	eor	r15, r15
     402:	f4 f8       	bld	r15, 4
     404:	8e 01       	movw	r16, r28
     406:	0f 5f       	subi	r16, 0xFF	; 255
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	d8 01       	movw	r26, r16
     40c:	ef 2d       	mov	r30, r15
     40e:	1d 92       	st	X+, r1
     410:	ea 95       	dec	r30
     412:	e9 f7       	brne	.-6      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
	strncat(buffer,"Kalibirere",16);
     414:	d8 01       	movw	r26, r16
     416:	0d 90       	ld	r0, X+
     418:	00 20       	and	r0, r0
     41a:	e9 f7       	brne	.-6      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     41c:	11 97       	sbiw	r26, 0x01	; 1
     41e:	8b e0       	ldi	r24, 0x0B	; 11
     420:	e0 e6       	ldi	r30, 0x60	; 96
     422:	f0 e0       	ldi	r31, 0x00	; 0
     424:	01 90       	ld	r0, Z+
     426:	0d 92       	st	X+, r0
     428:	8a 95       	dec	r24
     42a:	e1 f7       	brne	.-8      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
	lcd_gotoxy(0,0);
     42c:	60 e0       	ldi	r22, 0x00	; 0
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_gotoxy>
	lcd_puts(buffer);
     434:	c8 01       	movw	r24, r16
     436:	0e 94 86 01 	call	0x30c	; 0x30c <lcd_puts>
	
	//2. Zeile
	memset(buffer, 0, 16);
     43a:	d8 01       	movw	r26, r16
     43c:	1d 92       	st	X+, r1
     43e:	fa 94       	dec	r15
     440:	e9 f7       	brne	.-6      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
	strncat(buffer,"Ultraschall...",16);
     442:	d8 01       	movw	r26, r16
     444:	0d 90       	ld	r0, X+
     446:	00 20       	and	r0, r0
     448:	e9 f7       	brne	.-6      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     44a:	11 97       	sbiw	r26, 0x01	; 1
     44c:	8f e0       	ldi	r24, 0x0F	; 15
     44e:	eb e6       	ldi	r30, 0x6B	; 107
     450:	f0 e0       	ldi	r31, 0x00	; 0
     452:	01 90       	ld	r0, Z+
     454:	0d 92       	st	X+, r0
     456:	8a 95       	dec	r24
     458:	e1 f7       	brne	.-8      	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
	lcd_gotoxy(0,1);
     45a:	61 e0       	ldi	r22, 0x01	; 1
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_gotoxy>
	lcd_puts(buffer);
     462:	c8 01       	movw	r24, r16
     464:	0e 94 86 01 	call	0x30c	; 0x30c <lcd_puts>
	
	while(dDistanceCal < 0){
		dDistanceCal = distance(8);		
     468:	88 e0       	ldi	r24, 0x08	; 8
     46a:	0e 94 64 00 	call	0xc8	; 0xc8 <distance>
     46e:	6b 01       	movw	r12, r22
     470:	7c 01       	movw	r14, r24
     472:	bf e7       	ldi	r27, 0x7F	; 127
     474:	e8 e3       	ldi	r30, 0x38	; 56
     476:	f1 e0       	ldi	r31, 0x01	; 1
     478:	b1 50       	subi	r27, 0x01	; 1
     47a:	e0 40       	sbci	r30, 0x00	; 0
     47c:	f0 40       	sbci	r31, 0x00	; 0
     47e:	e1 f7       	brne	.-8      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     480:	00 c0       	rjmp	.+0      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     482:	00 00       	nop
     484:	04 e6       	ldi	r16, 0x64	; 100
     486:	10 e0       	ldi	r17, 0x00	; 0
     488:	5d c0       	rjmp	.+186    	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
     48a:	88 e0       	ldi	r24, 0x08	; 8
     48c:	0e 94 64 00 	call	0xc8	; 0xc8 <distance>
     490:	6b 01       	movw	r12, r22
     492:	7c 01       	movw	r14, r24
     494:	2f e7       	ldi	r18, 0x7F	; 127
     496:	38 e3       	ldi	r19, 0x38	; 56
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	21 50       	subi	r18, 0x01	; 1
     49c:	30 40       	sbci	r19, 0x00	; 0
     49e:	80 40       	sbci	r24, 0x00	; 0
     4a0:	e1 f7       	brne	.-8      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
     4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     4a4:	00 00       	nop
     4a6:	01 50       	subi	r16, 0x01	; 1
     4a8:	11 09       	sbc	r17, r1
		errorCount++;
		_delay_ms(50);
		if (errorCount > 100)
     4aa:	09 f0       	breq	.+2      	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
     4ac:	4b c0       	rjmp	.+150    	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
		{
			//1. Zeile
			memset(buffer, 0, 16);
     4ae:	68 94       	set
     4b0:	ff 24       	eor	r15, r15
     4b2:	f4 f8       	bld	r15, 4
     4b4:	8e 01       	movw	r16, r28
     4b6:	0f 5f       	subi	r16, 0xFF	; 255
     4b8:	1f 4f       	sbci	r17, 0xFF	; 255
     4ba:	d8 01       	movw	r26, r16
     4bc:	ef 2d       	mov	r30, r15
     4be:	1d 92       	st	X+, r1
     4c0:	ea 95       	dec	r30
     4c2:	e9 f7       	brne	.-6      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
			strncat(buffer,"Kalibirerung",16);
     4c4:	d8 01       	movw	r26, r16
     4c6:	0d 90       	ld	r0, X+
     4c8:	00 20       	and	r0, r0
     4ca:	e9 f7       	brne	.-6      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
     4cc:	11 97       	sbiw	r26, 0x01	; 1
     4ce:	8d e0       	ldi	r24, 0x0D	; 13
     4d0:	ea e7       	ldi	r30, 0x7A	; 122
     4d2:	f0 e0       	ldi	r31, 0x00	; 0
     4d4:	01 90       	ld	r0, Z+
     4d6:	0d 92       	st	X+, r0
     4d8:	8a 95       	dec	r24
     4da:	e1 f7       	brne	.-8      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
			lcd_gotoxy(0,0);
     4dc:	60 e0       	ldi	r22, 0x00	; 0
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_gotoxy>
			lcd_puts(buffer);
     4e4:	c8 01       	movw	r24, r16
     4e6:	0e 94 86 01 	call	0x30c	; 0x30c <lcd_puts>
				
			//2. Zeile
			memset(buffer, 0, 16);
     4ea:	d8 01       	movw	r26, r16
     4ec:	1d 92       	st	X+, r1
     4ee:	fa 94       	dec	r15
     4f0:	e9 f7       	brne	.-6      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
			strncat(buffer,"fehlgeschlagen",16);
     4f2:	d8 01       	movw	r26, r16
     4f4:	0d 90       	ld	r0, X+
     4f6:	00 20       	and	r0, r0
     4f8:	e9 f7       	brne	.-6      	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
     4fa:	11 97       	sbiw	r26, 0x01	; 1
     4fc:	8f e0       	ldi	r24, 0x0F	; 15
     4fe:	e7 e8       	ldi	r30, 0x87	; 135
     500:	f0 e0       	ldi	r31, 0x00	; 0
     502:	01 90       	ld	r0, Z+
     504:	0d 92       	st	X+, r0
     506:	8a 95       	dec	r24
     508:	e1 f7       	brne	.-8      	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
			lcd_gotoxy(0,1);
     50a:	61 e0       	ldi	r22, 0x01	; 1
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_gotoxy>
			lcd_puts(buffer);
     512:	c8 01       	movw	r24, r16
     514:	0e 94 86 01 	call	0x30c	; 0x30c <lcd_puts>
			
			while (true)
			{
				PORTB = 0x00;
				_delay_ms(250);
				PORTB = 0xff;
     518:	8f ef       	ldi	r24, 0xFF	; 255
			lcd_gotoxy(0,1);
			lcd_puts(buffer);
			
			while (true)
			{
				PORTB = 0x00;
     51a:	18 ba       	out	0x18, r1	; 24
     51c:	bf e7       	ldi	r27, 0x7F	; 127
     51e:	ea e1       	ldi	r30, 0x1A	; 26
     520:	f6 e0       	ldi	r31, 0x06	; 6
     522:	b1 50       	subi	r27, 0x01	; 1
     524:	e0 40       	sbci	r30, 0x00	; 0
     526:	f0 40       	sbci	r31, 0x00	; 0
     528:	e1 f7       	brne	.-8      	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
     52a:	00 c0       	rjmp	.+0      	; 0x52c <__EEPROM_REGION_LENGTH__+0x12c>
     52c:	00 00       	nop
				_delay_ms(250);
				PORTB = 0xff;
     52e:	88 bb       	out	0x18, r24	; 24
     530:	2f e7       	ldi	r18, 0x7F	; 127
     532:	3a e1       	ldi	r19, 0x1A	; 26
     534:	96 e0       	ldi	r25, 0x06	; 6
     536:	21 50       	subi	r18, 0x01	; 1
     538:	30 40       	sbci	r19, 0x00	; 0
     53a:	90 40       	sbci	r25, 0x00	; 0
     53c:	e1 f7       	brne	.-8      	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
     53e:	00 c0       	rjmp	.+0      	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
     540:	00 00       	nop
     542:	eb cf       	rjmp	.-42     	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
	memset(buffer, 0, 16);
	strncat(buffer,"Ultraschall...",16);
	lcd_gotoxy(0,1);
	lcd_puts(buffer);
	
	while(dDistanceCal < 0){
     544:	20 e0       	ldi	r18, 0x00	; 0
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	a9 01       	movw	r20, r18
     54a:	c7 01       	movw	r24, r14
     54c:	b6 01       	movw	r22, r12
     54e:	0e 94 09 04 	call	0x812	; 0x812 <__cmpsf2>
     552:	88 23       	and	r24, r24
     554:	0c f4       	brge	.+2      	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
     556:	99 cf       	rjmp	.-206    	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
				
		}

	}
	
	lcd_clrscr();
     558:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_clrscr>
     55c:	af ef       	ldi	r26, 0xFF	; 255
     55e:	b0 e7       	ldi	r27, 0x70	; 112
     560:	e2 e0       	ldi	r30, 0x02	; 2
     562:	a1 50       	subi	r26, 0x01	; 1
     564:	b0 40       	sbci	r27, 0x00	; 0
     566:	e0 40       	sbci	r30, 0x00	; 0
     568:	e1 f7       	brne	.-8      	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
     56a:	00 c0       	rjmp	.+0      	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
     56c:	00 00       	nop
	_delay_ms(100);
	PORTB = 0xff;
     56e:	8f ef       	ldi	r24, 0xFF	; 255
     570:	88 bb       	out	0x18, r24	; 24
	
	PORTB = ~(uint8_t)(dDistanceCal*100); // Entfernung in cm ausgeben
     572:	20 e0       	ldi	r18, 0x00	; 0
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	48 ec       	ldi	r20, 0xC8	; 200
     578:	52 e4       	ldi	r21, 0x42	; 66
     57a:	c7 01       	movw	r24, r14
     57c:	b6 01       	movw	r22, r12
     57e:	0e 94 66 05 	call	0xacc	; 0xacc <__mulsf3>
     582:	0e 94 80 04 	call	0x900	; 0x900 <__fixunssfsi>
     586:	26 2e       	mov	r2, r22
     588:	86 2f       	mov	r24, r22
     58a:	80 95       	com	r24
     58c:	88 bb       	out	0x18, r24	; 24
     58e:	ff ef       	ldi	r31, 0xFF	; 255
     590:	21 e1       	ldi	r18, 0x11	; 17
     592:	3a e7       	ldi	r19, 0x7A	; 122
     594:	f1 50       	subi	r31, 0x01	; 1
     596:	20 40       	sbci	r18, 0x00	; 0
     598:	30 40       	sbci	r19, 0x00	; 0
     59a:	e1 f7       	brne	.-8      	; 0x594 <__EEPROM_REGION_LENGTH__+0x194>
     59c:	00 c0       	rjmp	.+0      	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
     59e:	00 00       	nop
	
	int iAnzahl = 1;		//Anzahl an Personen im Raum
	float dDistance = 0;	//Entfernung vom Ultraschall (nicht geeicht)
	float dDistanceCal = -1;
	int errorCount = 0;
	bool somebody_here = false;
     5a0:	31 2c       	mov	r3, r1
int main(void)
{
	char buffer[16]="";		//Buffer für Display
	char strline[16] = "";	//string vorbereitet für die Übertragun
	
	int iAnzahl = 1;		//Anzahl an Personen im Raum
     5a2:	cc 24       	eor	r12, r12
     5a4:	c3 94       	inc	r12
     5a6:	d1 2c       	mov	r13, r1
		lcd_puts(buffer); //Puffer schreiben
		*/
		
		
		//1. Zeile
		memset(buffer, 0, 16);
     5a8:	68 94       	set
     5aa:	99 24       	eor	r9, r9
     5ac:	94 f8       	bld	r9, 4
     5ae:	8e 01       	movw	r16, r28
     5b0:	0f 5f       	subi	r16, 0xFF	; 255
     5b2:	1f 4f       	sbci	r17, 0xFF	; 255
			if (somebody_here)
			{
				_delay_ms(100);
			} else {
				iAnzahl++;
				somebody_here = true;
     5b4:	88 24       	eor	r8, r8
     5b6:	83 94       	inc	r8
			_delay_ms(100);
		}	
		
		//2. Zeile mit Zahl
		memset(buffer,0,16);
		sprintf(strline,"%d",iAnzahl);
     5b8:	0f 2e       	mov	r0, r31
     5ba:	fc e9       	ldi	r31, 0x9C	; 156
     5bc:	af 2e       	mov	r10, r31
     5be:	f0 e0       	ldi	r31, 0x00	; 0
     5c0:	bf 2e       	mov	r11, r31
     5c2:	f0 2d       	mov	r31, r0
     5c4:	7e 01       	movw	r14, r28
     5c6:	81 e1       	ldi	r24, 0x11	; 17
     5c8:	e8 0e       	add	r14, r24
     5ca:	f1 1c       	adc	r15, r1
		lcd_puts(buffer); //Puffer schreiben
		*/
		
		
		//1. Zeile
		memset(buffer, 0, 16);
     5cc:	d8 01       	movw	r26, r16
     5ce:	e9 2d       	mov	r30, r9
     5d0:	1d 92       	st	X+, r1
     5d2:	ea 95       	dec	r30
     5d4:	e9 f7       	brne	.-6      	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
		strncat(buffer,"Baum:",16);
     5d6:	d8 01       	movw	r26, r16
     5d8:	0d 90       	ld	r0, X+
     5da:	00 20       	and	r0, r0
     5dc:	e9 f7       	brne	.-6      	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
     5de:	11 97       	sbiw	r26, 0x01	; 1
     5e0:	86 e0       	ldi	r24, 0x06	; 6
     5e2:	e6 e9       	ldi	r30, 0x96	; 150
     5e4:	f0 e0       	ldi	r31, 0x00	; 0
     5e6:	01 90       	ld	r0, Z+
     5e8:	0d 92       	st	X+, r0
     5ea:	8a 95       	dec	r24
     5ec:	e1 f7       	brne	.-8      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
		lcd_gotoxy(0,0);
     5ee:	60 e0       	ldi	r22, 0x00	; 0
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_gotoxy>
		lcd_puts(buffer);
     5f6:	c8 01       	movw	r24, r16
     5f8:	0e 94 86 01 	call	0x30c	; 0x30c <lcd_puts>
		
		dDistance=distance(8);
     5fc:	88 e0       	ldi	r24, 0x08	; 8
     5fe:	0e 94 64 00 	call	0xc8	; 0xc8 <distance>
     602:	2b 01       	movw	r4, r22
     604:	3c 01       	movw	r6, r24
		if (dDistance>=0)
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	a9 01       	movw	r20, r18
     60c:	0e 94 61 05 	call	0xac2	; 0xac2 <__gesf2>
     610:	88 23       	and	r24, r24
     612:	6c f0       	brlt	.+26     	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
		{
			PORTB = ~(uint8_t)(dDistance*100); // Entfernung in cm ausgeben
     614:	20 e0       	ldi	r18, 0x00	; 0
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	48 ec       	ldi	r20, 0xC8	; 200
     61a:	52 e4       	ldi	r21, 0x42	; 66
     61c:	c3 01       	movw	r24, r6
     61e:	b2 01       	movw	r22, r4
     620:	0e 94 66 05 	call	0xacc	; 0xacc <__mulsf3>
     624:	0e 94 80 04 	call	0x900	; 0x900 <__fixunssfsi>
     628:	60 95       	com	r22
     62a:	68 bb       	out	0x18, r22	; 24
     62c:	02 c0       	rjmp	.+4      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
		}
		else
		{
			PORTB = 0xff;	// Fehler ausgeben
     62e:	ff ef       	ldi	r31, 0xFF	; 255
     630:	f8 bb       	out	0x18, r31	; 24
		}
		
		if ((uint8_t)(dDistance*100) < (uint8_t)(dDistanceCal*100))
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	48 ec       	ldi	r20, 0xC8	; 200
     638:	52 e4       	ldi	r21, 0x42	; 66
     63a:	c3 01       	movw	r24, r6
     63c:	b2 01       	movw	r22, r4
     63e:	0e 94 66 05 	call	0xacc	; 0xacc <__mulsf3>
     642:	0e 94 80 04 	call	0x900	; 0x900 <__fixunssfsi>
     646:	62 15       	cp	r22, r2
     648:	d0 f4       	brcc	.+52     	; 0x67e <__EEPROM_REGION_LENGTH__+0x27e>
		{
			
			if (somebody_here)
     64a:	33 20       	and	r3, r3
     64c:	51 f0       	breq	.+20     	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
     64e:	2f ef       	ldi	r18, 0xFF	; 255
     650:	30 e7       	ldi	r19, 0x70	; 112
     652:	82 e0       	ldi	r24, 0x02	; 2
     654:	21 50       	subi	r18, 0x01	; 1
     656:	30 40       	sbci	r19, 0x00	; 0
     658:	80 40       	sbci	r24, 0x00	; 0
     65a:	e1 f7       	brne	.-8      	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
     65c:	00 c0       	rjmp	.+0      	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
     65e:	00 00       	nop
     660:	18 c0       	rjmp	.+48     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
			{
				_delay_ms(100);
			} else {
				iAnzahl++;
     662:	9f ef       	ldi	r25, 0xFF	; 255
     664:	c9 1a       	sub	r12, r25
     666:	d9 0a       	sbc	r13, r25
     668:	af ef       	ldi	r26, 0xFF	; 255
     66a:	b0 e7       	ldi	r27, 0x70	; 112
     66c:	e2 e0       	ldi	r30, 0x02	; 2
     66e:	a1 50       	subi	r26, 0x01	; 1
     670:	b0 40       	sbci	r27, 0x00	; 0
     672:	e0 40       	sbci	r30, 0x00	; 0
     674:	e1 f7       	brne	.-8      	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
     676:	00 c0       	rjmp	.+0      	; 0x678 <__EEPROM_REGION_LENGTH__+0x278>
     678:	00 00       	nop
				somebody_here = true;
     67a:	38 2c       	mov	r3, r8
     67c:	0a c0       	rjmp	.+20     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
     67e:	ff ef       	ldi	r31, 0xFF	; 255
     680:	20 e7       	ldi	r18, 0x70	; 112
     682:	32 e0       	ldi	r19, 0x02	; 2
     684:	f1 50       	subi	r31, 0x01	; 1
     686:	20 40       	sbci	r18, 0x00	; 0
     688:	30 40       	sbci	r19, 0x00	; 0
     68a:	e1 f7       	brne	.-8      	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     68c:	00 c0       	rjmp	.+0      	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
     68e:	00 00       	nop
				_delay_ms(100);
			}
		} else {
			somebody_here = false;
     690:	31 2c       	mov	r3, r1
			_delay_ms(100);
		}	
		
		//2. Zeile mit Zahl
		memset(buffer,0,16);
     692:	d8 01       	movw	r26, r16
     694:	e9 2d       	mov	r30, r9
     696:	1d 92       	st	X+, r1
     698:	ea 95       	dec	r30
     69a:	e9 f7       	brne	.-6      	; 0x696 <__EEPROM_REGION_LENGTH__+0x296>
		sprintf(strline,"%d",iAnzahl);
     69c:	df 92       	push	r13
     69e:	cf 92       	push	r12
     6a0:	bf 92       	push	r11
     6a2:	af 92       	push	r10
     6a4:	ff 92       	push	r15
     6a6:	ef 92       	push	r14
     6a8:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <sprintf>
		strncat(buffer, strline, 16);
     6ac:	40 e1       	ldi	r20, 0x10	; 16
     6ae:	50 e0       	ldi	r21, 0x00	; 0
     6b0:	b7 01       	movw	r22, r14
     6b2:	c8 01       	movw	r24, r16
     6b4:	0e 94 d3 05 	call	0xba6	; 0xba6 <strncat>
		lcd_gotoxy(0,1);
     6b8:	68 2d       	mov	r22, r8
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_gotoxy>
		lcd_puts(buffer);
     6c0:	c8 01       	movw	r24, r16
     6c2:	0e 94 86 01 	call	0x30c	; 0x30c <lcd_puts>
		
	}
     6c6:	0f 90       	pop	r0
     6c8:	0f 90       	pop	r0
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	0f 90       	pop	r0
     6d0:	0f 90       	pop	r0
     6d2:	7c cf       	rjmp	.-264    	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>

000006d4 <__vector_4>:
	// 6. Enable interrupts, if needed.
	TIMSK |= (1<<OCIE2);				// output compare interrupt
}

ISR(TIMER2_COMP_vect)	// Timer 2 output compare interrupt
{
     6d4:	1f 92       	push	r1
     6d6:	0f 92       	push	r0
     6d8:	0f b6       	in	r0, 0x3f	; 63
     6da:	0f 92       	push	r0
     6dc:	11 24       	eor	r1, r1
     6de:	8f 93       	push	r24
	TCCR2 = TCCR2;      // Timer läuft nicht mit CPU-Takt, sondern
     6e0:	85 b5       	in	r24, 0x25	; 37
     6e2:	85 bd       	out	0x25, r24	; 37
						// mit 32768 Hz! Schreibvorgang auf
						// ein Timer-Register --> am Schluss
						// im ASSR-Register nachsehen, ob dieser
						// fertig ist (siehe while am Schluss)
	sekunde++;
     6e4:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <sekunde>
     6e8:	8f 5f       	subi	r24, 0xFF	; 255
     6ea:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <sekunde>
	if(sekunde == 60)
     6ee:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <sekunde>
     6f2:	8c 33       	cpi	r24, 0x3C	; 60
     6f4:	39 f4       	brne	.+14     	; 0x704 <__vector_4+0x30>
	{
		minute++;
     6f6:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <minute>
     6fa:	8f 5f       	subi	r24, 0xFF	; 255
     6fc:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <minute>
		sekunde = 0;
     700:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <sekunde>
	}
	if(minute == 60)
     704:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <minute>
     708:	8c 33       	cpi	r24, 0x3C	; 60
     70a:	39 f4       	brne	.+14     	; 0x71a <__vector_4+0x46>
	{
		stunde++;
     70c:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <stunde>
     710:	8f 5f       	subi	r24, 0xFF	; 255
     712:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <stunde>
		minute = 0;
     716:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <minute>
	}
	if(stunde == 24)
     71a:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <stunde>
     71e:	88 31       	cpi	r24, 0x18	; 24
     720:	11 f4       	brne	.+4      	; 0x726 <__vector_4+0x52>
	{
		stunde = 0;
     722:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <stunde>
	}
	while(ASSR & ((1<<TCN2UB) | (1<<OCR2UB) | (1<<TCR2UB)));  // siehe erster Befehl in der Interrupt-Routine
     726:	82 b5       	in	r24, 0x22	; 34
     728:	87 70       	andi	r24, 0x07	; 7
     72a:	e9 f7       	brne	.-6      	; 0x726 <__vector_4+0x52>
     72c:	8f 91       	pop	r24
     72e:	0f 90       	pop	r0
     730:	0f be       	out	0x3f, r0	; 63
     732:	0f 90       	pop	r0
     734:	1f 90       	pop	r1
     736:	18 95       	reti

00000738 <__subsf3>:
     738:	50 58       	subi	r21, 0x80	; 128

0000073a <__addsf3>:
     73a:	bb 27       	eor	r27, r27
     73c:	aa 27       	eor	r26, r26
     73e:	0e 94 b4 03 	call	0x768	; 0x768 <__addsf3x>
     742:	0c 94 27 05 	jmp	0xa4e	; 0xa4e <__fp_round>
     746:	0e 94 19 05 	call	0xa32	; 0xa32 <__fp_pscA>
     74a:	38 f0       	brcs	.+14     	; 0x75a <__addsf3+0x20>
     74c:	0e 94 20 05 	call	0xa40	; 0xa40 <__fp_pscB>
     750:	20 f0       	brcs	.+8      	; 0x75a <__addsf3+0x20>
     752:	39 f4       	brne	.+14     	; 0x762 <__addsf3+0x28>
     754:	9f 3f       	cpi	r25, 0xFF	; 255
     756:	19 f4       	brne	.+6      	; 0x75e <__addsf3+0x24>
     758:	26 f4       	brtc	.+8      	; 0x762 <__addsf3+0x28>
     75a:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_nan>
     75e:	0e f4       	brtc	.+2      	; 0x762 <__addsf3+0x28>
     760:	e0 95       	com	r30
     762:	e7 fb       	bst	r30, 7
     764:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_inf>

00000768 <__addsf3x>:
     768:	e9 2f       	mov	r30, r25
     76a:	0e 94 38 05 	call	0xa70	; 0xa70 <__fp_split3>
     76e:	58 f3       	brcs	.-42     	; 0x746 <__addsf3+0xc>
     770:	ba 17       	cp	r27, r26
     772:	62 07       	cpc	r22, r18
     774:	73 07       	cpc	r23, r19
     776:	84 07       	cpc	r24, r20
     778:	95 07       	cpc	r25, r21
     77a:	20 f0       	brcs	.+8      	; 0x784 <__addsf3x+0x1c>
     77c:	79 f4       	brne	.+30     	; 0x79c <__addsf3x+0x34>
     77e:	a6 f5       	brtc	.+104    	; 0x7e8 <__addsf3x+0x80>
     780:	0c 94 5a 05 	jmp	0xab4	; 0xab4 <__fp_zero>
     784:	0e f4       	brtc	.+2      	; 0x788 <__addsf3x+0x20>
     786:	e0 95       	com	r30
     788:	0b 2e       	mov	r0, r27
     78a:	ba 2f       	mov	r27, r26
     78c:	a0 2d       	mov	r26, r0
     78e:	0b 01       	movw	r0, r22
     790:	b9 01       	movw	r22, r18
     792:	90 01       	movw	r18, r0
     794:	0c 01       	movw	r0, r24
     796:	ca 01       	movw	r24, r20
     798:	a0 01       	movw	r20, r0
     79a:	11 24       	eor	r1, r1
     79c:	ff 27       	eor	r31, r31
     79e:	59 1b       	sub	r21, r25
     7a0:	99 f0       	breq	.+38     	; 0x7c8 <__addsf3x+0x60>
     7a2:	59 3f       	cpi	r21, 0xF9	; 249
     7a4:	50 f4       	brcc	.+20     	; 0x7ba <__addsf3x+0x52>
     7a6:	50 3e       	cpi	r21, 0xE0	; 224
     7a8:	68 f1       	brcs	.+90     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7aa:	1a 16       	cp	r1, r26
     7ac:	f0 40       	sbci	r31, 0x00	; 0
     7ae:	a2 2f       	mov	r26, r18
     7b0:	23 2f       	mov	r18, r19
     7b2:	34 2f       	mov	r19, r20
     7b4:	44 27       	eor	r20, r20
     7b6:	58 5f       	subi	r21, 0xF8	; 248
     7b8:	f3 cf       	rjmp	.-26     	; 0x7a0 <__addsf3x+0x38>
     7ba:	46 95       	lsr	r20
     7bc:	37 95       	ror	r19
     7be:	27 95       	ror	r18
     7c0:	a7 95       	ror	r26
     7c2:	f0 40       	sbci	r31, 0x00	; 0
     7c4:	53 95       	inc	r21
     7c6:	c9 f7       	brne	.-14     	; 0x7ba <__addsf3x+0x52>
     7c8:	7e f4       	brtc	.+30     	; 0x7e8 <__addsf3x+0x80>
     7ca:	1f 16       	cp	r1, r31
     7cc:	ba 0b       	sbc	r27, r26
     7ce:	62 0b       	sbc	r22, r18
     7d0:	73 0b       	sbc	r23, r19
     7d2:	84 0b       	sbc	r24, r20
     7d4:	ba f0       	brmi	.+46     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7d6:	91 50       	subi	r25, 0x01	; 1
     7d8:	a1 f0       	breq	.+40     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     7da:	ff 0f       	add	r31, r31
     7dc:	bb 1f       	adc	r27, r27
     7de:	66 1f       	adc	r22, r22
     7e0:	77 1f       	adc	r23, r23
     7e2:	88 1f       	adc	r24, r24
     7e4:	c2 f7       	brpl	.-16     	; 0x7d6 <__addsf3x+0x6e>
     7e6:	0e c0       	rjmp	.+28     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7e8:	ba 0f       	add	r27, r26
     7ea:	62 1f       	adc	r22, r18
     7ec:	73 1f       	adc	r23, r19
     7ee:	84 1f       	adc	r24, r20
     7f0:	48 f4       	brcc	.+18     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7f2:	87 95       	ror	r24
     7f4:	77 95       	ror	r23
     7f6:	67 95       	ror	r22
     7f8:	b7 95       	ror	r27
     7fa:	f7 95       	ror	r31
     7fc:	9e 3f       	cpi	r25, 0xFE	; 254
     7fe:	08 f0       	brcs	.+2      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     800:	b0 cf       	rjmp	.-160    	; 0x762 <__addsf3+0x28>
     802:	93 95       	inc	r25
     804:	88 0f       	add	r24, r24
     806:	08 f0       	brcs	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     808:	99 27       	eor	r25, r25
     80a:	ee 0f       	add	r30, r30
     80c:	97 95       	ror	r25
     80e:	87 95       	ror	r24
     810:	08 95       	ret

00000812 <__cmpsf2>:
     812:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fp_cmp>
     816:	08 f4       	brcc	.+2      	; 0x81a <__cmpsf2+0x8>
     818:	81 e0       	ldi	r24, 0x01	; 1
     81a:	08 95       	ret

0000081c <__divsf3>:
     81c:	0e 94 22 04 	call	0x844	; 0x844 <__divsf3x>
     820:	0c 94 27 05 	jmp	0xa4e	; 0xa4e <__fp_round>
     824:	0e 94 20 05 	call	0xa40	; 0xa40 <__fp_pscB>
     828:	58 f0       	brcs	.+22     	; 0x840 <__divsf3+0x24>
     82a:	0e 94 19 05 	call	0xa32	; 0xa32 <__fp_pscA>
     82e:	40 f0       	brcs	.+16     	; 0x840 <__divsf3+0x24>
     830:	29 f4       	brne	.+10     	; 0x83c <__divsf3+0x20>
     832:	5f 3f       	cpi	r21, 0xFF	; 255
     834:	29 f0       	breq	.+10     	; 0x840 <__divsf3+0x24>
     836:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_inf>
     83a:	51 11       	cpse	r21, r1
     83c:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_szero>
     840:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_nan>

00000844 <__divsf3x>:
     844:	0e 94 38 05 	call	0xa70	; 0xa70 <__fp_split3>
     848:	68 f3       	brcs	.-38     	; 0x824 <__divsf3+0x8>

0000084a <__divsf3_pse>:
     84a:	99 23       	and	r25, r25
     84c:	b1 f3       	breq	.-20     	; 0x83a <__divsf3+0x1e>
     84e:	55 23       	and	r21, r21
     850:	91 f3       	breq	.-28     	; 0x836 <__divsf3+0x1a>
     852:	95 1b       	sub	r25, r21
     854:	55 0b       	sbc	r21, r21
     856:	bb 27       	eor	r27, r27
     858:	aa 27       	eor	r26, r26
     85a:	62 17       	cp	r22, r18
     85c:	73 07       	cpc	r23, r19
     85e:	84 07       	cpc	r24, r20
     860:	38 f0       	brcs	.+14     	; 0x870 <__stack+0x11>
     862:	9f 5f       	subi	r25, 0xFF	; 255
     864:	5f 4f       	sbci	r21, 0xFF	; 255
     866:	22 0f       	add	r18, r18
     868:	33 1f       	adc	r19, r19
     86a:	44 1f       	adc	r20, r20
     86c:	aa 1f       	adc	r26, r26
     86e:	a9 f3       	breq	.-22     	; 0x85a <__divsf3_pse+0x10>
     870:	35 d0       	rcall	.+106    	; 0x8dc <__stack+0x7d>
     872:	0e 2e       	mov	r0, r30
     874:	3a f0       	brmi	.+14     	; 0x884 <__stack+0x25>
     876:	e0 e8       	ldi	r30, 0x80	; 128
     878:	32 d0       	rcall	.+100    	; 0x8de <__stack+0x7f>
     87a:	91 50       	subi	r25, 0x01	; 1
     87c:	50 40       	sbci	r21, 0x00	; 0
     87e:	e6 95       	lsr	r30
     880:	00 1c       	adc	r0, r0
     882:	ca f7       	brpl	.-14     	; 0x876 <__stack+0x17>
     884:	2b d0       	rcall	.+86     	; 0x8dc <__stack+0x7d>
     886:	fe 2f       	mov	r31, r30
     888:	29 d0       	rcall	.+82     	; 0x8dc <__stack+0x7d>
     88a:	66 0f       	add	r22, r22
     88c:	77 1f       	adc	r23, r23
     88e:	88 1f       	adc	r24, r24
     890:	bb 1f       	adc	r27, r27
     892:	26 17       	cp	r18, r22
     894:	37 07       	cpc	r19, r23
     896:	48 07       	cpc	r20, r24
     898:	ab 07       	cpc	r26, r27
     89a:	b0 e8       	ldi	r27, 0x80	; 128
     89c:	09 f0       	breq	.+2      	; 0x8a0 <__stack+0x41>
     89e:	bb 0b       	sbc	r27, r27
     8a0:	80 2d       	mov	r24, r0
     8a2:	bf 01       	movw	r22, r30
     8a4:	ff 27       	eor	r31, r31
     8a6:	93 58       	subi	r25, 0x83	; 131
     8a8:	5f 4f       	sbci	r21, 0xFF	; 255
     8aa:	3a f0       	brmi	.+14     	; 0x8ba <__stack+0x5b>
     8ac:	9e 3f       	cpi	r25, 0xFE	; 254
     8ae:	51 05       	cpc	r21, r1
     8b0:	78 f0       	brcs	.+30     	; 0x8d0 <__stack+0x71>
     8b2:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_inf>
     8b6:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_szero>
     8ba:	5f 3f       	cpi	r21, 0xFF	; 255
     8bc:	e4 f3       	brlt	.-8      	; 0x8b6 <__stack+0x57>
     8be:	98 3e       	cpi	r25, 0xE8	; 232
     8c0:	d4 f3       	brlt	.-12     	; 0x8b6 <__stack+0x57>
     8c2:	86 95       	lsr	r24
     8c4:	77 95       	ror	r23
     8c6:	67 95       	ror	r22
     8c8:	b7 95       	ror	r27
     8ca:	f7 95       	ror	r31
     8cc:	9f 5f       	subi	r25, 0xFF	; 255
     8ce:	c9 f7       	brne	.-14     	; 0x8c2 <__stack+0x63>
     8d0:	88 0f       	add	r24, r24
     8d2:	91 1d       	adc	r25, r1
     8d4:	96 95       	lsr	r25
     8d6:	87 95       	ror	r24
     8d8:	97 f9       	bld	r25, 7
     8da:	08 95       	ret
     8dc:	e1 e0       	ldi	r30, 0x01	; 1
     8de:	66 0f       	add	r22, r22
     8e0:	77 1f       	adc	r23, r23
     8e2:	88 1f       	adc	r24, r24
     8e4:	bb 1f       	adc	r27, r27
     8e6:	62 17       	cp	r22, r18
     8e8:	73 07       	cpc	r23, r19
     8ea:	84 07       	cpc	r24, r20
     8ec:	ba 07       	cpc	r27, r26
     8ee:	20 f0       	brcs	.+8      	; 0x8f8 <__stack+0x99>
     8f0:	62 1b       	sub	r22, r18
     8f2:	73 0b       	sbc	r23, r19
     8f4:	84 0b       	sbc	r24, r20
     8f6:	ba 0b       	sbc	r27, r26
     8f8:	ee 1f       	adc	r30, r30
     8fa:	88 f7       	brcc	.-30     	; 0x8de <__stack+0x7f>
     8fc:	e0 95       	com	r30
     8fe:	08 95       	ret

00000900 <__fixunssfsi>:
     900:	0e 94 40 05 	call	0xa80	; 0xa80 <__fp_splitA>
     904:	88 f0       	brcs	.+34     	; 0x928 <__fixunssfsi+0x28>
     906:	9f 57       	subi	r25, 0x7F	; 127
     908:	98 f0       	brcs	.+38     	; 0x930 <__fixunssfsi+0x30>
     90a:	b9 2f       	mov	r27, r25
     90c:	99 27       	eor	r25, r25
     90e:	b7 51       	subi	r27, 0x17	; 23
     910:	b0 f0       	brcs	.+44     	; 0x93e <__fixunssfsi+0x3e>
     912:	e1 f0       	breq	.+56     	; 0x94c <__fixunssfsi+0x4c>
     914:	66 0f       	add	r22, r22
     916:	77 1f       	adc	r23, r23
     918:	88 1f       	adc	r24, r24
     91a:	99 1f       	adc	r25, r25
     91c:	1a f0       	brmi	.+6      	; 0x924 <__fixunssfsi+0x24>
     91e:	ba 95       	dec	r27
     920:	c9 f7       	brne	.-14     	; 0x914 <__fixunssfsi+0x14>
     922:	14 c0       	rjmp	.+40     	; 0x94c <__fixunssfsi+0x4c>
     924:	b1 30       	cpi	r27, 0x01	; 1
     926:	91 f0       	breq	.+36     	; 0x94c <__fixunssfsi+0x4c>
     928:	0e 94 5a 05 	call	0xab4	; 0xab4 <__fp_zero>
     92c:	b1 e0       	ldi	r27, 0x01	; 1
     92e:	08 95       	ret
     930:	0c 94 5a 05 	jmp	0xab4	; 0xab4 <__fp_zero>
     934:	67 2f       	mov	r22, r23
     936:	78 2f       	mov	r23, r24
     938:	88 27       	eor	r24, r24
     93a:	b8 5f       	subi	r27, 0xF8	; 248
     93c:	39 f0       	breq	.+14     	; 0x94c <__fixunssfsi+0x4c>
     93e:	b9 3f       	cpi	r27, 0xF9	; 249
     940:	cc f3       	brlt	.-14     	; 0x934 <__fixunssfsi+0x34>
     942:	86 95       	lsr	r24
     944:	77 95       	ror	r23
     946:	67 95       	ror	r22
     948:	b3 95       	inc	r27
     94a:	d9 f7       	brne	.-10     	; 0x942 <__fixunssfsi+0x42>
     94c:	3e f4       	brtc	.+14     	; 0x95c <__fixunssfsi+0x5c>
     94e:	90 95       	com	r25
     950:	80 95       	com	r24
     952:	70 95       	com	r23
     954:	61 95       	neg	r22
     956:	7f 4f       	sbci	r23, 0xFF	; 255
     958:	8f 4f       	sbci	r24, 0xFF	; 255
     95a:	9f 4f       	sbci	r25, 0xFF	; 255
     95c:	08 95       	ret

0000095e <__floatunsisf>:
     95e:	e8 94       	clt
     960:	09 c0       	rjmp	.+18     	; 0x974 <__floatsisf+0x12>

00000962 <__floatsisf>:
     962:	97 fb       	bst	r25, 7
     964:	3e f4       	brtc	.+14     	; 0x974 <__floatsisf+0x12>
     966:	90 95       	com	r25
     968:	80 95       	com	r24
     96a:	70 95       	com	r23
     96c:	61 95       	neg	r22
     96e:	7f 4f       	sbci	r23, 0xFF	; 255
     970:	8f 4f       	sbci	r24, 0xFF	; 255
     972:	9f 4f       	sbci	r25, 0xFF	; 255
     974:	99 23       	and	r25, r25
     976:	a9 f0       	breq	.+42     	; 0x9a2 <__floatsisf+0x40>
     978:	f9 2f       	mov	r31, r25
     97a:	96 e9       	ldi	r25, 0x96	; 150
     97c:	bb 27       	eor	r27, r27
     97e:	93 95       	inc	r25
     980:	f6 95       	lsr	r31
     982:	87 95       	ror	r24
     984:	77 95       	ror	r23
     986:	67 95       	ror	r22
     988:	b7 95       	ror	r27
     98a:	f1 11       	cpse	r31, r1
     98c:	f8 cf       	rjmp	.-16     	; 0x97e <__floatsisf+0x1c>
     98e:	fa f4       	brpl	.+62     	; 0x9ce <__floatsisf+0x6c>
     990:	bb 0f       	add	r27, r27
     992:	11 f4       	brne	.+4      	; 0x998 <__floatsisf+0x36>
     994:	60 ff       	sbrs	r22, 0
     996:	1b c0       	rjmp	.+54     	; 0x9ce <__floatsisf+0x6c>
     998:	6f 5f       	subi	r22, 0xFF	; 255
     99a:	7f 4f       	sbci	r23, 0xFF	; 255
     99c:	8f 4f       	sbci	r24, 0xFF	; 255
     99e:	9f 4f       	sbci	r25, 0xFF	; 255
     9a0:	16 c0       	rjmp	.+44     	; 0x9ce <__floatsisf+0x6c>
     9a2:	88 23       	and	r24, r24
     9a4:	11 f0       	breq	.+4      	; 0x9aa <__floatsisf+0x48>
     9a6:	96 e9       	ldi	r25, 0x96	; 150
     9a8:	11 c0       	rjmp	.+34     	; 0x9cc <__floatsisf+0x6a>
     9aa:	77 23       	and	r23, r23
     9ac:	21 f0       	breq	.+8      	; 0x9b6 <__floatsisf+0x54>
     9ae:	9e e8       	ldi	r25, 0x8E	; 142
     9b0:	87 2f       	mov	r24, r23
     9b2:	76 2f       	mov	r23, r22
     9b4:	05 c0       	rjmp	.+10     	; 0x9c0 <__floatsisf+0x5e>
     9b6:	66 23       	and	r22, r22
     9b8:	71 f0       	breq	.+28     	; 0x9d6 <__floatsisf+0x74>
     9ba:	96 e8       	ldi	r25, 0x86	; 134
     9bc:	86 2f       	mov	r24, r22
     9be:	70 e0       	ldi	r23, 0x00	; 0
     9c0:	60 e0       	ldi	r22, 0x00	; 0
     9c2:	2a f0       	brmi	.+10     	; 0x9ce <__floatsisf+0x6c>
     9c4:	9a 95       	dec	r25
     9c6:	66 0f       	add	r22, r22
     9c8:	77 1f       	adc	r23, r23
     9ca:	88 1f       	adc	r24, r24
     9cc:	da f7       	brpl	.-10     	; 0x9c4 <__floatsisf+0x62>
     9ce:	88 0f       	add	r24, r24
     9d0:	96 95       	lsr	r25
     9d2:	87 95       	ror	r24
     9d4:	97 f9       	bld	r25, 7
     9d6:	08 95       	ret

000009d8 <__fp_cmp>:
     9d8:	99 0f       	add	r25, r25
     9da:	00 08       	sbc	r0, r0
     9dc:	55 0f       	add	r21, r21
     9de:	aa 0b       	sbc	r26, r26
     9e0:	e0 e8       	ldi	r30, 0x80	; 128
     9e2:	fe ef       	ldi	r31, 0xFE	; 254
     9e4:	16 16       	cp	r1, r22
     9e6:	17 06       	cpc	r1, r23
     9e8:	e8 07       	cpc	r30, r24
     9ea:	f9 07       	cpc	r31, r25
     9ec:	c0 f0       	brcs	.+48     	; 0xa1e <__fp_cmp+0x46>
     9ee:	12 16       	cp	r1, r18
     9f0:	13 06       	cpc	r1, r19
     9f2:	e4 07       	cpc	r30, r20
     9f4:	f5 07       	cpc	r31, r21
     9f6:	98 f0       	brcs	.+38     	; 0xa1e <__fp_cmp+0x46>
     9f8:	62 1b       	sub	r22, r18
     9fa:	73 0b       	sbc	r23, r19
     9fc:	84 0b       	sbc	r24, r20
     9fe:	95 0b       	sbc	r25, r21
     a00:	39 f4       	brne	.+14     	; 0xa10 <__fp_cmp+0x38>
     a02:	0a 26       	eor	r0, r26
     a04:	61 f0       	breq	.+24     	; 0xa1e <__fp_cmp+0x46>
     a06:	23 2b       	or	r18, r19
     a08:	24 2b       	or	r18, r20
     a0a:	25 2b       	or	r18, r21
     a0c:	21 f4       	brne	.+8      	; 0xa16 <__fp_cmp+0x3e>
     a0e:	08 95       	ret
     a10:	0a 26       	eor	r0, r26
     a12:	09 f4       	brne	.+2      	; 0xa16 <__fp_cmp+0x3e>
     a14:	a1 40       	sbci	r26, 0x01	; 1
     a16:	a6 95       	lsr	r26
     a18:	8f ef       	ldi	r24, 0xFF	; 255
     a1a:	81 1d       	adc	r24, r1
     a1c:	81 1d       	adc	r24, r1
     a1e:	08 95       	ret

00000a20 <__fp_inf>:
     a20:	97 f9       	bld	r25, 7
     a22:	9f 67       	ori	r25, 0x7F	; 127
     a24:	80 e8       	ldi	r24, 0x80	; 128
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	08 95       	ret

00000a2c <__fp_nan>:
     a2c:	9f ef       	ldi	r25, 0xFF	; 255
     a2e:	80 ec       	ldi	r24, 0xC0	; 192
     a30:	08 95       	ret

00000a32 <__fp_pscA>:
     a32:	00 24       	eor	r0, r0
     a34:	0a 94       	dec	r0
     a36:	16 16       	cp	r1, r22
     a38:	17 06       	cpc	r1, r23
     a3a:	18 06       	cpc	r1, r24
     a3c:	09 06       	cpc	r0, r25
     a3e:	08 95       	ret

00000a40 <__fp_pscB>:
     a40:	00 24       	eor	r0, r0
     a42:	0a 94       	dec	r0
     a44:	12 16       	cp	r1, r18
     a46:	13 06       	cpc	r1, r19
     a48:	14 06       	cpc	r1, r20
     a4a:	05 06       	cpc	r0, r21
     a4c:	08 95       	ret

00000a4e <__fp_round>:
     a4e:	09 2e       	mov	r0, r25
     a50:	03 94       	inc	r0
     a52:	00 0c       	add	r0, r0
     a54:	11 f4       	brne	.+4      	; 0xa5a <__fp_round+0xc>
     a56:	88 23       	and	r24, r24
     a58:	52 f0       	brmi	.+20     	; 0xa6e <__fp_round+0x20>
     a5a:	bb 0f       	add	r27, r27
     a5c:	40 f4       	brcc	.+16     	; 0xa6e <__fp_round+0x20>
     a5e:	bf 2b       	or	r27, r31
     a60:	11 f4       	brne	.+4      	; 0xa66 <__fp_round+0x18>
     a62:	60 ff       	sbrs	r22, 0
     a64:	04 c0       	rjmp	.+8      	; 0xa6e <__fp_round+0x20>
     a66:	6f 5f       	subi	r22, 0xFF	; 255
     a68:	7f 4f       	sbci	r23, 0xFF	; 255
     a6a:	8f 4f       	sbci	r24, 0xFF	; 255
     a6c:	9f 4f       	sbci	r25, 0xFF	; 255
     a6e:	08 95       	ret

00000a70 <__fp_split3>:
     a70:	57 fd       	sbrc	r21, 7
     a72:	90 58       	subi	r25, 0x80	; 128
     a74:	44 0f       	add	r20, r20
     a76:	55 1f       	adc	r21, r21
     a78:	59 f0       	breq	.+22     	; 0xa90 <__fp_splitA+0x10>
     a7a:	5f 3f       	cpi	r21, 0xFF	; 255
     a7c:	71 f0       	breq	.+28     	; 0xa9a <__fp_splitA+0x1a>
     a7e:	47 95       	ror	r20

00000a80 <__fp_splitA>:
     a80:	88 0f       	add	r24, r24
     a82:	97 fb       	bst	r25, 7
     a84:	99 1f       	adc	r25, r25
     a86:	61 f0       	breq	.+24     	; 0xaa0 <__fp_splitA+0x20>
     a88:	9f 3f       	cpi	r25, 0xFF	; 255
     a8a:	79 f0       	breq	.+30     	; 0xaaa <__fp_splitA+0x2a>
     a8c:	87 95       	ror	r24
     a8e:	08 95       	ret
     a90:	12 16       	cp	r1, r18
     a92:	13 06       	cpc	r1, r19
     a94:	14 06       	cpc	r1, r20
     a96:	55 1f       	adc	r21, r21
     a98:	f2 cf       	rjmp	.-28     	; 0xa7e <__fp_split3+0xe>
     a9a:	46 95       	lsr	r20
     a9c:	f1 df       	rcall	.-30     	; 0xa80 <__fp_splitA>
     a9e:	08 c0       	rjmp	.+16     	; 0xab0 <__fp_splitA+0x30>
     aa0:	16 16       	cp	r1, r22
     aa2:	17 06       	cpc	r1, r23
     aa4:	18 06       	cpc	r1, r24
     aa6:	99 1f       	adc	r25, r25
     aa8:	f1 cf       	rjmp	.-30     	; 0xa8c <__fp_splitA+0xc>
     aaa:	86 95       	lsr	r24
     aac:	71 05       	cpc	r23, r1
     aae:	61 05       	cpc	r22, r1
     ab0:	08 94       	sec
     ab2:	08 95       	ret

00000ab4 <__fp_zero>:
     ab4:	e8 94       	clt

00000ab6 <__fp_szero>:
     ab6:	bb 27       	eor	r27, r27
     ab8:	66 27       	eor	r22, r22
     aba:	77 27       	eor	r23, r23
     abc:	cb 01       	movw	r24, r22
     abe:	97 f9       	bld	r25, 7
     ac0:	08 95       	ret

00000ac2 <__gesf2>:
     ac2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__fp_cmp>
     ac6:	08 f4       	brcc	.+2      	; 0xaca <__gesf2+0x8>
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	08 95       	ret

00000acc <__mulsf3>:
     acc:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__mulsf3x>
     ad0:	0c 94 27 05 	jmp	0xa4e	; 0xa4e <__fp_round>
     ad4:	0e 94 19 05 	call	0xa32	; 0xa32 <__fp_pscA>
     ad8:	38 f0       	brcs	.+14     	; 0xae8 <__mulsf3+0x1c>
     ada:	0e 94 20 05 	call	0xa40	; 0xa40 <__fp_pscB>
     ade:	20 f0       	brcs	.+8      	; 0xae8 <__mulsf3+0x1c>
     ae0:	95 23       	and	r25, r21
     ae2:	11 f0       	breq	.+4      	; 0xae8 <__mulsf3+0x1c>
     ae4:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_inf>
     ae8:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_nan>
     aec:	11 24       	eor	r1, r1
     aee:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_szero>

00000af2 <__mulsf3x>:
     af2:	0e 94 38 05 	call	0xa70	; 0xa70 <__fp_split3>
     af6:	70 f3       	brcs	.-36     	; 0xad4 <__mulsf3+0x8>

00000af8 <__mulsf3_pse>:
     af8:	95 9f       	mul	r25, r21
     afa:	c1 f3       	breq	.-16     	; 0xaec <__mulsf3+0x20>
     afc:	95 0f       	add	r25, r21
     afe:	50 e0       	ldi	r21, 0x00	; 0
     b00:	55 1f       	adc	r21, r21
     b02:	62 9f       	mul	r22, r18
     b04:	f0 01       	movw	r30, r0
     b06:	72 9f       	mul	r23, r18
     b08:	bb 27       	eor	r27, r27
     b0a:	f0 0d       	add	r31, r0
     b0c:	b1 1d       	adc	r27, r1
     b0e:	63 9f       	mul	r22, r19
     b10:	aa 27       	eor	r26, r26
     b12:	f0 0d       	add	r31, r0
     b14:	b1 1d       	adc	r27, r1
     b16:	aa 1f       	adc	r26, r26
     b18:	64 9f       	mul	r22, r20
     b1a:	66 27       	eor	r22, r22
     b1c:	b0 0d       	add	r27, r0
     b1e:	a1 1d       	adc	r26, r1
     b20:	66 1f       	adc	r22, r22
     b22:	82 9f       	mul	r24, r18
     b24:	22 27       	eor	r18, r18
     b26:	b0 0d       	add	r27, r0
     b28:	a1 1d       	adc	r26, r1
     b2a:	62 1f       	adc	r22, r18
     b2c:	73 9f       	mul	r23, r19
     b2e:	b0 0d       	add	r27, r0
     b30:	a1 1d       	adc	r26, r1
     b32:	62 1f       	adc	r22, r18
     b34:	83 9f       	mul	r24, r19
     b36:	a0 0d       	add	r26, r0
     b38:	61 1d       	adc	r22, r1
     b3a:	22 1f       	adc	r18, r18
     b3c:	74 9f       	mul	r23, r20
     b3e:	33 27       	eor	r19, r19
     b40:	a0 0d       	add	r26, r0
     b42:	61 1d       	adc	r22, r1
     b44:	23 1f       	adc	r18, r19
     b46:	84 9f       	mul	r24, r20
     b48:	60 0d       	add	r22, r0
     b4a:	21 1d       	adc	r18, r1
     b4c:	82 2f       	mov	r24, r18
     b4e:	76 2f       	mov	r23, r22
     b50:	6a 2f       	mov	r22, r26
     b52:	11 24       	eor	r1, r1
     b54:	9f 57       	subi	r25, 0x7F	; 127
     b56:	50 40       	sbci	r21, 0x00	; 0
     b58:	9a f0       	brmi	.+38     	; 0xb80 <__mulsf3_pse+0x88>
     b5a:	f1 f0       	breq	.+60     	; 0xb98 <__mulsf3_pse+0xa0>
     b5c:	88 23       	and	r24, r24
     b5e:	4a f0       	brmi	.+18     	; 0xb72 <__mulsf3_pse+0x7a>
     b60:	ee 0f       	add	r30, r30
     b62:	ff 1f       	adc	r31, r31
     b64:	bb 1f       	adc	r27, r27
     b66:	66 1f       	adc	r22, r22
     b68:	77 1f       	adc	r23, r23
     b6a:	88 1f       	adc	r24, r24
     b6c:	91 50       	subi	r25, 0x01	; 1
     b6e:	50 40       	sbci	r21, 0x00	; 0
     b70:	a9 f7       	brne	.-22     	; 0xb5c <__mulsf3_pse+0x64>
     b72:	9e 3f       	cpi	r25, 0xFE	; 254
     b74:	51 05       	cpc	r21, r1
     b76:	80 f0       	brcs	.+32     	; 0xb98 <__mulsf3_pse+0xa0>
     b78:	0c 94 10 05 	jmp	0xa20	; 0xa20 <__fp_inf>
     b7c:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_szero>
     b80:	5f 3f       	cpi	r21, 0xFF	; 255
     b82:	e4 f3       	brlt	.-8      	; 0xb7c <__mulsf3_pse+0x84>
     b84:	98 3e       	cpi	r25, 0xE8	; 232
     b86:	d4 f3       	brlt	.-12     	; 0xb7c <__mulsf3_pse+0x84>
     b88:	86 95       	lsr	r24
     b8a:	77 95       	ror	r23
     b8c:	67 95       	ror	r22
     b8e:	b7 95       	ror	r27
     b90:	f7 95       	ror	r31
     b92:	e7 95       	ror	r30
     b94:	9f 5f       	subi	r25, 0xFF	; 255
     b96:	c1 f7       	brne	.-16     	; 0xb88 <__mulsf3_pse+0x90>
     b98:	fe 2b       	or	r31, r30
     b9a:	88 0f       	add	r24, r24
     b9c:	91 1d       	adc	r25, r1
     b9e:	96 95       	lsr	r25
     ba0:	87 95       	ror	r24
     ba2:	97 f9       	bld	r25, 7
     ba4:	08 95       	ret

00000ba6 <strncat>:
     ba6:	fb 01       	movw	r30, r22
     ba8:	dc 01       	movw	r26, r24
     baa:	0d 90       	ld	r0, X+
     bac:	00 20       	and	r0, r0
     bae:	e9 f7       	brne	.-6      	; 0xbaa <strncat+0x4>
     bb0:	11 97       	sbiw	r26, 0x01	; 1
     bb2:	41 50       	subi	r20, 0x01	; 1
     bb4:	50 40       	sbci	r21, 0x00	; 0
     bb6:	28 f0       	brcs	.+10     	; 0xbc2 <strncat+0x1c>
     bb8:	01 90       	ld	r0, Z+
     bba:	00 20       	and	r0, r0
     bbc:	0d 92       	st	X+, r0
     bbe:	c9 f7       	brne	.-14     	; 0xbb2 <strncat+0xc>
     bc0:	08 95       	ret
     bc2:	1c 92       	st	X, r1
     bc4:	08 95       	ret

00000bc6 <sprintf>:
     bc6:	ae e0       	ldi	r26, 0x0E	; 14
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	e9 ee       	ldi	r30, 0xE9	; 233
     bcc:	f5 e0       	ldi	r31, 0x05	; 5
     bce:	0c 94 a4 08 	jmp	0x1148	; 0x1148 <__prologue_saves__+0x1c>
     bd2:	0d 89       	ldd	r16, Y+21	; 0x15
     bd4:	1e 89       	ldd	r17, Y+22	; 0x16
     bd6:	86 e0       	ldi	r24, 0x06	; 6
     bd8:	8c 83       	std	Y+4, r24	; 0x04
     bda:	1a 83       	std	Y+2, r17	; 0x02
     bdc:	09 83       	std	Y+1, r16	; 0x01
     bde:	8f ef       	ldi	r24, 0xFF	; 255
     be0:	9f e7       	ldi	r25, 0x7F	; 127
     be2:	9e 83       	std	Y+6, r25	; 0x06
     be4:	8d 83       	std	Y+5, r24	; 0x05
     be6:	ae 01       	movw	r20, r28
     be8:	47 5e       	subi	r20, 0xE7	; 231
     bea:	5f 4f       	sbci	r21, 0xFF	; 255
     bec:	6f 89       	ldd	r22, Y+23	; 0x17
     bee:	78 8d       	ldd	r23, Y+24	; 0x18
     bf0:	ce 01       	movw	r24, r28
     bf2:	01 96       	adiw	r24, 0x01	; 1
     bf4:	0e 94 05 06 	call	0xc0a	; 0xc0a <vfprintf>
     bf8:	ef 81       	ldd	r30, Y+7	; 0x07
     bfa:	f8 85       	ldd	r31, Y+8	; 0x08
     bfc:	e0 0f       	add	r30, r16
     bfe:	f1 1f       	adc	r31, r17
     c00:	10 82       	st	Z, r1
     c02:	2e 96       	adiw	r28, 0x0e	; 14
     c04:	e4 e0       	ldi	r30, 0x04	; 4
     c06:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__epilogue_restores__+0x1c>

00000c0a <vfprintf>:
     c0a:	ab e0       	ldi	r26, 0x0B	; 11
     c0c:	b0 e0       	ldi	r27, 0x00	; 0
     c0e:	eb e0       	ldi	r30, 0x0B	; 11
     c10:	f6 e0       	ldi	r31, 0x06	; 6
     c12:	0c 94 96 08 	jmp	0x112c	; 0x112c <__prologue_saves__>
     c16:	6c 01       	movw	r12, r24
     c18:	7b 01       	movw	r14, r22
     c1a:	8a 01       	movw	r16, r20
     c1c:	fc 01       	movw	r30, r24
     c1e:	17 82       	std	Z+7, r1	; 0x07
     c20:	16 82       	std	Z+6, r1	; 0x06
     c22:	83 81       	ldd	r24, Z+3	; 0x03
     c24:	81 ff       	sbrs	r24, 1
     c26:	cc c1       	rjmp	.+920    	; 0xfc0 <vfprintf+0x3b6>
     c28:	ce 01       	movw	r24, r28
     c2a:	01 96       	adiw	r24, 0x01	; 1
     c2c:	3c 01       	movw	r6, r24
     c2e:	f6 01       	movw	r30, r12
     c30:	93 81       	ldd	r25, Z+3	; 0x03
     c32:	f7 01       	movw	r30, r14
     c34:	93 fd       	sbrc	r25, 3
     c36:	85 91       	lpm	r24, Z+
     c38:	93 ff       	sbrs	r25, 3
     c3a:	81 91       	ld	r24, Z+
     c3c:	7f 01       	movw	r14, r30
     c3e:	88 23       	and	r24, r24
     c40:	09 f4       	brne	.+2      	; 0xc44 <vfprintf+0x3a>
     c42:	ba c1       	rjmp	.+884    	; 0xfb8 <vfprintf+0x3ae>
     c44:	85 32       	cpi	r24, 0x25	; 37
     c46:	39 f4       	brne	.+14     	; 0xc56 <vfprintf+0x4c>
     c48:	93 fd       	sbrc	r25, 3
     c4a:	85 91       	lpm	r24, Z+
     c4c:	93 ff       	sbrs	r25, 3
     c4e:	81 91       	ld	r24, Z+
     c50:	7f 01       	movw	r14, r30
     c52:	85 32       	cpi	r24, 0x25	; 37
     c54:	29 f4       	brne	.+10     	; 0xc60 <vfprintf+0x56>
     c56:	b6 01       	movw	r22, r12
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     c5e:	e7 cf       	rjmp	.-50     	; 0xc2e <vfprintf+0x24>
     c60:	91 2c       	mov	r9, r1
     c62:	21 2c       	mov	r2, r1
     c64:	31 2c       	mov	r3, r1
     c66:	ff e1       	ldi	r31, 0x1F	; 31
     c68:	f3 15       	cp	r31, r3
     c6a:	d8 f0       	brcs	.+54     	; 0xca2 <vfprintf+0x98>
     c6c:	8b 32       	cpi	r24, 0x2B	; 43
     c6e:	79 f0       	breq	.+30     	; 0xc8e <vfprintf+0x84>
     c70:	38 f4       	brcc	.+14     	; 0xc80 <vfprintf+0x76>
     c72:	80 32       	cpi	r24, 0x20	; 32
     c74:	79 f0       	breq	.+30     	; 0xc94 <vfprintf+0x8a>
     c76:	83 32       	cpi	r24, 0x23	; 35
     c78:	a1 f4       	brne	.+40     	; 0xca2 <vfprintf+0x98>
     c7a:	23 2d       	mov	r18, r3
     c7c:	20 61       	ori	r18, 0x10	; 16
     c7e:	1d c0       	rjmp	.+58     	; 0xcba <vfprintf+0xb0>
     c80:	8d 32       	cpi	r24, 0x2D	; 45
     c82:	61 f0       	breq	.+24     	; 0xc9c <vfprintf+0x92>
     c84:	80 33       	cpi	r24, 0x30	; 48
     c86:	69 f4       	brne	.+26     	; 0xca2 <vfprintf+0x98>
     c88:	23 2d       	mov	r18, r3
     c8a:	21 60       	ori	r18, 0x01	; 1
     c8c:	16 c0       	rjmp	.+44     	; 0xcba <vfprintf+0xb0>
     c8e:	83 2d       	mov	r24, r3
     c90:	82 60       	ori	r24, 0x02	; 2
     c92:	38 2e       	mov	r3, r24
     c94:	e3 2d       	mov	r30, r3
     c96:	e4 60       	ori	r30, 0x04	; 4
     c98:	3e 2e       	mov	r3, r30
     c9a:	2a c0       	rjmp	.+84     	; 0xcf0 <vfprintf+0xe6>
     c9c:	f3 2d       	mov	r31, r3
     c9e:	f8 60       	ori	r31, 0x08	; 8
     ca0:	1d c0       	rjmp	.+58     	; 0xcdc <vfprintf+0xd2>
     ca2:	37 fc       	sbrc	r3, 7
     ca4:	2d c0       	rjmp	.+90     	; 0xd00 <vfprintf+0xf6>
     ca6:	20 ed       	ldi	r18, 0xD0	; 208
     ca8:	28 0f       	add	r18, r24
     caa:	2a 30       	cpi	r18, 0x0A	; 10
     cac:	40 f0       	brcs	.+16     	; 0xcbe <vfprintf+0xb4>
     cae:	8e 32       	cpi	r24, 0x2E	; 46
     cb0:	b9 f4       	brne	.+46     	; 0xce0 <vfprintf+0xd6>
     cb2:	36 fc       	sbrc	r3, 6
     cb4:	81 c1       	rjmp	.+770    	; 0xfb8 <vfprintf+0x3ae>
     cb6:	23 2d       	mov	r18, r3
     cb8:	20 64       	ori	r18, 0x40	; 64
     cba:	32 2e       	mov	r3, r18
     cbc:	19 c0       	rjmp	.+50     	; 0xcf0 <vfprintf+0xe6>
     cbe:	36 fe       	sbrs	r3, 6
     cc0:	06 c0       	rjmp	.+12     	; 0xcce <vfprintf+0xc4>
     cc2:	8a e0       	ldi	r24, 0x0A	; 10
     cc4:	98 9e       	mul	r9, r24
     cc6:	20 0d       	add	r18, r0
     cc8:	11 24       	eor	r1, r1
     cca:	92 2e       	mov	r9, r18
     ccc:	11 c0       	rjmp	.+34     	; 0xcf0 <vfprintf+0xe6>
     cce:	ea e0       	ldi	r30, 0x0A	; 10
     cd0:	2e 9e       	mul	r2, r30
     cd2:	20 0d       	add	r18, r0
     cd4:	11 24       	eor	r1, r1
     cd6:	22 2e       	mov	r2, r18
     cd8:	f3 2d       	mov	r31, r3
     cda:	f0 62       	ori	r31, 0x20	; 32
     cdc:	3f 2e       	mov	r3, r31
     cde:	08 c0       	rjmp	.+16     	; 0xcf0 <vfprintf+0xe6>
     ce0:	8c 36       	cpi	r24, 0x6C	; 108
     ce2:	21 f4       	brne	.+8      	; 0xcec <vfprintf+0xe2>
     ce4:	83 2d       	mov	r24, r3
     ce6:	80 68       	ori	r24, 0x80	; 128
     ce8:	38 2e       	mov	r3, r24
     cea:	02 c0       	rjmp	.+4      	; 0xcf0 <vfprintf+0xe6>
     cec:	88 36       	cpi	r24, 0x68	; 104
     cee:	41 f4       	brne	.+16     	; 0xd00 <vfprintf+0xf6>
     cf0:	f7 01       	movw	r30, r14
     cf2:	93 fd       	sbrc	r25, 3
     cf4:	85 91       	lpm	r24, Z+
     cf6:	93 ff       	sbrs	r25, 3
     cf8:	81 91       	ld	r24, Z+
     cfa:	7f 01       	movw	r14, r30
     cfc:	81 11       	cpse	r24, r1
     cfe:	b3 cf       	rjmp	.-154    	; 0xc66 <vfprintf+0x5c>
     d00:	98 2f       	mov	r25, r24
     d02:	9f 7d       	andi	r25, 0xDF	; 223
     d04:	95 54       	subi	r25, 0x45	; 69
     d06:	93 30       	cpi	r25, 0x03	; 3
     d08:	28 f4       	brcc	.+10     	; 0xd14 <vfprintf+0x10a>
     d0a:	0c 5f       	subi	r16, 0xFC	; 252
     d0c:	1f 4f       	sbci	r17, 0xFF	; 255
     d0e:	9f e3       	ldi	r25, 0x3F	; 63
     d10:	99 83       	std	Y+1, r25	; 0x01
     d12:	0d c0       	rjmp	.+26     	; 0xd2e <vfprintf+0x124>
     d14:	83 36       	cpi	r24, 0x63	; 99
     d16:	31 f0       	breq	.+12     	; 0xd24 <vfprintf+0x11a>
     d18:	83 37       	cpi	r24, 0x73	; 115
     d1a:	71 f0       	breq	.+28     	; 0xd38 <vfprintf+0x12e>
     d1c:	83 35       	cpi	r24, 0x53	; 83
     d1e:	09 f0       	breq	.+2      	; 0xd22 <vfprintf+0x118>
     d20:	59 c0       	rjmp	.+178    	; 0xdd4 <vfprintf+0x1ca>
     d22:	21 c0       	rjmp	.+66     	; 0xd66 <vfprintf+0x15c>
     d24:	f8 01       	movw	r30, r16
     d26:	80 81       	ld	r24, Z
     d28:	89 83       	std	Y+1, r24	; 0x01
     d2a:	0e 5f       	subi	r16, 0xFE	; 254
     d2c:	1f 4f       	sbci	r17, 0xFF	; 255
     d2e:	88 24       	eor	r8, r8
     d30:	83 94       	inc	r8
     d32:	91 2c       	mov	r9, r1
     d34:	53 01       	movw	r10, r6
     d36:	13 c0       	rjmp	.+38     	; 0xd5e <vfprintf+0x154>
     d38:	28 01       	movw	r4, r16
     d3a:	f2 e0       	ldi	r31, 0x02	; 2
     d3c:	4f 0e       	add	r4, r31
     d3e:	51 1c       	adc	r5, r1
     d40:	f8 01       	movw	r30, r16
     d42:	a0 80       	ld	r10, Z
     d44:	b1 80       	ldd	r11, Z+1	; 0x01
     d46:	36 fe       	sbrs	r3, 6
     d48:	03 c0       	rjmp	.+6      	; 0xd50 <vfprintf+0x146>
     d4a:	69 2d       	mov	r22, r9
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	02 c0       	rjmp	.+4      	; 0xd54 <vfprintf+0x14a>
     d50:	6f ef       	ldi	r22, 0xFF	; 255
     d52:	7f ef       	ldi	r23, 0xFF	; 255
     d54:	c5 01       	movw	r24, r10
     d56:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <strnlen>
     d5a:	4c 01       	movw	r8, r24
     d5c:	82 01       	movw	r16, r4
     d5e:	f3 2d       	mov	r31, r3
     d60:	ff 77       	andi	r31, 0x7F	; 127
     d62:	3f 2e       	mov	r3, r31
     d64:	16 c0       	rjmp	.+44     	; 0xd92 <vfprintf+0x188>
     d66:	28 01       	movw	r4, r16
     d68:	22 e0       	ldi	r18, 0x02	; 2
     d6a:	42 0e       	add	r4, r18
     d6c:	51 1c       	adc	r5, r1
     d6e:	f8 01       	movw	r30, r16
     d70:	a0 80       	ld	r10, Z
     d72:	b1 80       	ldd	r11, Z+1	; 0x01
     d74:	36 fe       	sbrs	r3, 6
     d76:	03 c0       	rjmp	.+6      	; 0xd7e <vfprintf+0x174>
     d78:	69 2d       	mov	r22, r9
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <vfprintf+0x178>
     d7e:	6f ef       	ldi	r22, 0xFF	; 255
     d80:	7f ef       	ldi	r23, 0xFF	; 255
     d82:	c5 01       	movw	r24, r10
     d84:	0e 94 e6 07 	call	0xfcc	; 0xfcc <strnlen_P>
     d88:	4c 01       	movw	r8, r24
     d8a:	f3 2d       	mov	r31, r3
     d8c:	f0 68       	ori	r31, 0x80	; 128
     d8e:	3f 2e       	mov	r3, r31
     d90:	82 01       	movw	r16, r4
     d92:	33 fc       	sbrc	r3, 3
     d94:	1b c0       	rjmp	.+54     	; 0xdcc <vfprintf+0x1c2>
     d96:	82 2d       	mov	r24, r2
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	88 16       	cp	r8, r24
     d9c:	99 06       	cpc	r9, r25
     d9e:	b0 f4       	brcc	.+44     	; 0xdcc <vfprintf+0x1c2>
     da0:	b6 01       	movw	r22, r12
     da2:	80 e2       	ldi	r24, 0x20	; 32
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     daa:	2a 94       	dec	r2
     dac:	f4 cf       	rjmp	.-24     	; 0xd96 <vfprintf+0x18c>
     dae:	f5 01       	movw	r30, r10
     db0:	37 fc       	sbrc	r3, 7
     db2:	85 91       	lpm	r24, Z+
     db4:	37 fe       	sbrs	r3, 7
     db6:	81 91       	ld	r24, Z+
     db8:	5f 01       	movw	r10, r30
     dba:	b6 01       	movw	r22, r12
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     dc2:	21 10       	cpse	r2, r1
     dc4:	2a 94       	dec	r2
     dc6:	21 e0       	ldi	r18, 0x01	; 1
     dc8:	82 1a       	sub	r8, r18
     dca:	91 08       	sbc	r9, r1
     dcc:	81 14       	cp	r8, r1
     dce:	91 04       	cpc	r9, r1
     dd0:	71 f7       	brne	.-36     	; 0xdae <vfprintf+0x1a4>
     dd2:	e8 c0       	rjmp	.+464    	; 0xfa4 <vfprintf+0x39a>
     dd4:	84 36       	cpi	r24, 0x64	; 100
     dd6:	11 f0       	breq	.+4      	; 0xddc <vfprintf+0x1d2>
     dd8:	89 36       	cpi	r24, 0x69	; 105
     dda:	41 f5       	brne	.+80     	; 0xe2c <vfprintf+0x222>
     ddc:	f8 01       	movw	r30, r16
     dde:	37 fe       	sbrs	r3, 7
     de0:	07 c0       	rjmp	.+14     	; 0xdf0 <vfprintf+0x1e6>
     de2:	60 81       	ld	r22, Z
     de4:	71 81       	ldd	r23, Z+1	; 0x01
     de6:	82 81       	ldd	r24, Z+2	; 0x02
     de8:	93 81       	ldd	r25, Z+3	; 0x03
     dea:	0c 5f       	subi	r16, 0xFC	; 252
     dec:	1f 4f       	sbci	r17, 0xFF	; 255
     dee:	08 c0       	rjmp	.+16     	; 0xe00 <vfprintf+0x1f6>
     df0:	60 81       	ld	r22, Z
     df2:	71 81       	ldd	r23, Z+1	; 0x01
     df4:	07 2e       	mov	r0, r23
     df6:	00 0c       	add	r0, r0
     df8:	88 0b       	sbc	r24, r24
     dfa:	99 0b       	sbc	r25, r25
     dfc:	0e 5f       	subi	r16, 0xFE	; 254
     dfe:	1f 4f       	sbci	r17, 0xFF	; 255
     e00:	f3 2d       	mov	r31, r3
     e02:	ff 76       	andi	r31, 0x6F	; 111
     e04:	3f 2e       	mov	r3, r31
     e06:	97 ff       	sbrs	r25, 7
     e08:	09 c0       	rjmp	.+18     	; 0xe1c <vfprintf+0x212>
     e0a:	90 95       	com	r25
     e0c:	80 95       	com	r24
     e0e:	70 95       	com	r23
     e10:	61 95       	neg	r22
     e12:	7f 4f       	sbci	r23, 0xFF	; 255
     e14:	8f 4f       	sbci	r24, 0xFF	; 255
     e16:	9f 4f       	sbci	r25, 0xFF	; 255
     e18:	f0 68       	ori	r31, 0x80	; 128
     e1a:	3f 2e       	mov	r3, r31
     e1c:	2a e0       	ldi	r18, 0x0A	; 10
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	a3 01       	movw	r20, r6
     e22:	0e 94 38 08 	call	0x1070	; 0x1070 <__ultoa_invert>
     e26:	88 2e       	mov	r8, r24
     e28:	86 18       	sub	r8, r6
     e2a:	45 c0       	rjmp	.+138    	; 0xeb6 <vfprintf+0x2ac>
     e2c:	85 37       	cpi	r24, 0x75	; 117
     e2e:	31 f4       	brne	.+12     	; 0xe3c <vfprintf+0x232>
     e30:	23 2d       	mov	r18, r3
     e32:	2f 7e       	andi	r18, 0xEF	; 239
     e34:	b2 2e       	mov	r11, r18
     e36:	2a e0       	ldi	r18, 0x0A	; 10
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	25 c0       	rjmp	.+74     	; 0xe86 <vfprintf+0x27c>
     e3c:	93 2d       	mov	r25, r3
     e3e:	99 7f       	andi	r25, 0xF9	; 249
     e40:	b9 2e       	mov	r11, r25
     e42:	8f 36       	cpi	r24, 0x6F	; 111
     e44:	c1 f0       	breq	.+48     	; 0xe76 <vfprintf+0x26c>
     e46:	18 f4       	brcc	.+6      	; 0xe4e <vfprintf+0x244>
     e48:	88 35       	cpi	r24, 0x58	; 88
     e4a:	79 f0       	breq	.+30     	; 0xe6a <vfprintf+0x260>
     e4c:	b5 c0       	rjmp	.+362    	; 0xfb8 <vfprintf+0x3ae>
     e4e:	80 37       	cpi	r24, 0x70	; 112
     e50:	19 f0       	breq	.+6      	; 0xe58 <vfprintf+0x24e>
     e52:	88 37       	cpi	r24, 0x78	; 120
     e54:	21 f0       	breq	.+8      	; 0xe5e <vfprintf+0x254>
     e56:	b0 c0       	rjmp	.+352    	; 0xfb8 <vfprintf+0x3ae>
     e58:	e9 2f       	mov	r30, r25
     e5a:	e0 61       	ori	r30, 0x10	; 16
     e5c:	be 2e       	mov	r11, r30
     e5e:	b4 fe       	sbrs	r11, 4
     e60:	0d c0       	rjmp	.+26     	; 0xe7c <vfprintf+0x272>
     e62:	fb 2d       	mov	r31, r11
     e64:	f4 60       	ori	r31, 0x04	; 4
     e66:	bf 2e       	mov	r11, r31
     e68:	09 c0       	rjmp	.+18     	; 0xe7c <vfprintf+0x272>
     e6a:	34 fe       	sbrs	r3, 4
     e6c:	0a c0       	rjmp	.+20     	; 0xe82 <vfprintf+0x278>
     e6e:	29 2f       	mov	r18, r25
     e70:	26 60       	ori	r18, 0x06	; 6
     e72:	b2 2e       	mov	r11, r18
     e74:	06 c0       	rjmp	.+12     	; 0xe82 <vfprintf+0x278>
     e76:	28 e0       	ldi	r18, 0x08	; 8
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	05 c0       	rjmp	.+10     	; 0xe86 <vfprintf+0x27c>
     e7c:	20 e1       	ldi	r18, 0x10	; 16
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	02 c0       	rjmp	.+4      	; 0xe86 <vfprintf+0x27c>
     e82:	20 e1       	ldi	r18, 0x10	; 16
     e84:	32 e0       	ldi	r19, 0x02	; 2
     e86:	f8 01       	movw	r30, r16
     e88:	b7 fe       	sbrs	r11, 7
     e8a:	07 c0       	rjmp	.+14     	; 0xe9a <vfprintf+0x290>
     e8c:	60 81       	ld	r22, Z
     e8e:	71 81       	ldd	r23, Z+1	; 0x01
     e90:	82 81       	ldd	r24, Z+2	; 0x02
     e92:	93 81       	ldd	r25, Z+3	; 0x03
     e94:	0c 5f       	subi	r16, 0xFC	; 252
     e96:	1f 4f       	sbci	r17, 0xFF	; 255
     e98:	06 c0       	rjmp	.+12     	; 0xea6 <vfprintf+0x29c>
     e9a:	60 81       	ld	r22, Z
     e9c:	71 81       	ldd	r23, Z+1	; 0x01
     e9e:	80 e0       	ldi	r24, 0x00	; 0
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	0e 5f       	subi	r16, 0xFE	; 254
     ea4:	1f 4f       	sbci	r17, 0xFF	; 255
     ea6:	a3 01       	movw	r20, r6
     ea8:	0e 94 38 08 	call	0x1070	; 0x1070 <__ultoa_invert>
     eac:	88 2e       	mov	r8, r24
     eae:	86 18       	sub	r8, r6
     eb0:	fb 2d       	mov	r31, r11
     eb2:	ff 77       	andi	r31, 0x7F	; 127
     eb4:	3f 2e       	mov	r3, r31
     eb6:	36 fe       	sbrs	r3, 6
     eb8:	0d c0       	rjmp	.+26     	; 0xed4 <vfprintf+0x2ca>
     eba:	23 2d       	mov	r18, r3
     ebc:	2e 7f       	andi	r18, 0xFE	; 254
     ebe:	a2 2e       	mov	r10, r18
     ec0:	89 14       	cp	r8, r9
     ec2:	58 f4       	brcc	.+22     	; 0xeda <vfprintf+0x2d0>
     ec4:	34 fe       	sbrs	r3, 4
     ec6:	0b c0       	rjmp	.+22     	; 0xede <vfprintf+0x2d4>
     ec8:	32 fc       	sbrc	r3, 2
     eca:	09 c0       	rjmp	.+18     	; 0xede <vfprintf+0x2d4>
     ecc:	83 2d       	mov	r24, r3
     ece:	8e 7e       	andi	r24, 0xEE	; 238
     ed0:	a8 2e       	mov	r10, r24
     ed2:	05 c0       	rjmp	.+10     	; 0xede <vfprintf+0x2d4>
     ed4:	b8 2c       	mov	r11, r8
     ed6:	a3 2c       	mov	r10, r3
     ed8:	03 c0       	rjmp	.+6      	; 0xee0 <vfprintf+0x2d6>
     eda:	b8 2c       	mov	r11, r8
     edc:	01 c0       	rjmp	.+2      	; 0xee0 <vfprintf+0x2d6>
     ede:	b9 2c       	mov	r11, r9
     ee0:	a4 fe       	sbrs	r10, 4
     ee2:	0f c0       	rjmp	.+30     	; 0xf02 <vfprintf+0x2f8>
     ee4:	fe 01       	movw	r30, r28
     ee6:	e8 0d       	add	r30, r8
     ee8:	f1 1d       	adc	r31, r1
     eea:	80 81       	ld	r24, Z
     eec:	80 33       	cpi	r24, 0x30	; 48
     eee:	21 f4       	brne	.+8      	; 0xef8 <vfprintf+0x2ee>
     ef0:	9a 2d       	mov	r25, r10
     ef2:	99 7e       	andi	r25, 0xE9	; 233
     ef4:	a9 2e       	mov	r10, r25
     ef6:	09 c0       	rjmp	.+18     	; 0xf0a <vfprintf+0x300>
     ef8:	a2 fe       	sbrs	r10, 2
     efa:	06 c0       	rjmp	.+12     	; 0xf08 <vfprintf+0x2fe>
     efc:	b3 94       	inc	r11
     efe:	b3 94       	inc	r11
     f00:	04 c0       	rjmp	.+8      	; 0xf0a <vfprintf+0x300>
     f02:	8a 2d       	mov	r24, r10
     f04:	86 78       	andi	r24, 0x86	; 134
     f06:	09 f0       	breq	.+2      	; 0xf0a <vfprintf+0x300>
     f08:	b3 94       	inc	r11
     f0a:	a3 fc       	sbrc	r10, 3
     f0c:	11 c0       	rjmp	.+34     	; 0xf30 <vfprintf+0x326>
     f0e:	a0 fe       	sbrs	r10, 0
     f10:	06 c0       	rjmp	.+12     	; 0xf1e <vfprintf+0x314>
     f12:	b2 14       	cp	r11, r2
     f14:	88 f4       	brcc	.+34     	; 0xf38 <vfprintf+0x32e>
     f16:	28 0c       	add	r2, r8
     f18:	92 2c       	mov	r9, r2
     f1a:	9b 18       	sub	r9, r11
     f1c:	0e c0       	rjmp	.+28     	; 0xf3a <vfprintf+0x330>
     f1e:	b2 14       	cp	r11, r2
     f20:	60 f4       	brcc	.+24     	; 0xf3a <vfprintf+0x330>
     f22:	b6 01       	movw	r22, r12
     f24:	80 e2       	ldi	r24, 0x20	; 32
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f2c:	b3 94       	inc	r11
     f2e:	f7 cf       	rjmp	.-18     	; 0xf1e <vfprintf+0x314>
     f30:	b2 14       	cp	r11, r2
     f32:	18 f4       	brcc	.+6      	; 0xf3a <vfprintf+0x330>
     f34:	2b 18       	sub	r2, r11
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <vfprintf+0x332>
     f38:	98 2c       	mov	r9, r8
     f3a:	21 2c       	mov	r2, r1
     f3c:	a4 fe       	sbrs	r10, 4
     f3e:	10 c0       	rjmp	.+32     	; 0xf60 <vfprintf+0x356>
     f40:	b6 01       	movw	r22, r12
     f42:	80 e3       	ldi	r24, 0x30	; 48
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f4a:	a2 fe       	sbrs	r10, 2
     f4c:	17 c0       	rjmp	.+46     	; 0xf7c <vfprintf+0x372>
     f4e:	a1 fc       	sbrc	r10, 1
     f50:	03 c0       	rjmp	.+6      	; 0xf58 <vfprintf+0x34e>
     f52:	88 e7       	ldi	r24, 0x78	; 120
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <vfprintf+0x352>
     f58:	88 e5       	ldi	r24, 0x58	; 88
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	b6 01       	movw	r22, r12
     f5e:	0c c0       	rjmp	.+24     	; 0xf78 <vfprintf+0x36e>
     f60:	8a 2d       	mov	r24, r10
     f62:	86 78       	andi	r24, 0x86	; 134
     f64:	59 f0       	breq	.+22     	; 0xf7c <vfprintf+0x372>
     f66:	a1 fe       	sbrs	r10, 1
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <vfprintf+0x364>
     f6a:	8b e2       	ldi	r24, 0x2B	; 43
     f6c:	01 c0       	rjmp	.+2      	; 0xf70 <vfprintf+0x366>
     f6e:	80 e2       	ldi	r24, 0x20	; 32
     f70:	a7 fc       	sbrc	r10, 7
     f72:	8d e2       	ldi	r24, 0x2D	; 45
     f74:	b6 01       	movw	r22, r12
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f7c:	89 14       	cp	r8, r9
     f7e:	38 f4       	brcc	.+14     	; 0xf8e <vfprintf+0x384>
     f80:	b6 01       	movw	r22, r12
     f82:	80 e3       	ldi	r24, 0x30	; 48
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f8a:	9a 94       	dec	r9
     f8c:	f7 cf       	rjmp	.-18     	; 0xf7c <vfprintf+0x372>
     f8e:	8a 94       	dec	r8
     f90:	f3 01       	movw	r30, r6
     f92:	e8 0d       	add	r30, r8
     f94:	f1 1d       	adc	r31, r1
     f96:	80 81       	ld	r24, Z
     f98:	b6 01       	movw	r22, r12
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     fa0:	81 10       	cpse	r8, r1
     fa2:	f5 cf       	rjmp	.-22     	; 0xf8e <vfprintf+0x384>
     fa4:	22 20       	and	r2, r2
     fa6:	09 f4       	brne	.+2      	; 0xfaa <vfprintf+0x3a0>
     fa8:	42 ce       	rjmp	.-892    	; 0xc2e <vfprintf+0x24>
     faa:	b6 01       	movw	r22, r12
     fac:	80 e2       	ldi	r24, 0x20	; 32
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     fb4:	2a 94       	dec	r2
     fb6:	f6 cf       	rjmp	.-20     	; 0xfa4 <vfprintf+0x39a>
     fb8:	f6 01       	movw	r30, r12
     fba:	86 81       	ldd	r24, Z+6	; 0x06
     fbc:	97 81       	ldd	r25, Z+7	; 0x07
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <vfprintf+0x3ba>
     fc0:	8f ef       	ldi	r24, 0xFF	; 255
     fc2:	9f ef       	ldi	r25, 0xFF	; 255
     fc4:	2b 96       	adiw	r28, 0x0b	; 11
     fc6:	e2 e1       	ldi	r30, 0x12	; 18
     fc8:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__epilogue_restores__>

00000fcc <strnlen_P>:
     fcc:	fc 01       	movw	r30, r24
     fce:	05 90       	lpm	r0, Z+
     fd0:	61 50       	subi	r22, 0x01	; 1
     fd2:	70 40       	sbci	r23, 0x00	; 0
     fd4:	01 10       	cpse	r0, r1
     fd6:	d8 f7       	brcc	.-10     	; 0xfce <strnlen_P+0x2>
     fd8:	80 95       	com	r24
     fda:	90 95       	com	r25
     fdc:	8e 0f       	add	r24, r30
     fde:	9f 1f       	adc	r25, r31
     fe0:	08 95       	ret

00000fe2 <strnlen>:
     fe2:	fc 01       	movw	r30, r24
     fe4:	61 50       	subi	r22, 0x01	; 1
     fe6:	70 40       	sbci	r23, 0x00	; 0
     fe8:	01 90       	ld	r0, Z+
     fea:	01 10       	cpse	r0, r1
     fec:	d8 f7       	brcc	.-10     	; 0xfe4 <strnlen+0x2>
     fee:	80 95       	com	r24
     ff0:	90 95       	com	r25
     ff2:	8e 0f       	add	r24, r30
     ff4:	9f 1f       	adc	r25, r31
     ff6:	08 95       	ret

00000ff8 <fputc>:
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	fb 01       	movw	r30, r22
    1002:	23 81       	ldd	r18, Z+3	; 0x03
    1004:	21 fd       	sbrc	r18, 1
    1006:	03 c0       	rjmp	.+6      	; 0x100e <fputc+0x16>
    1008:	8f ef       	ldi	r24, 0xFF	; 255
    100a:	9f ef       	ldi	r25, 0xFF	; 255
    100c:	2c c0       	rjmp	.+88     	; 0x1066 <fputc+0x6e>
    100e:	22 ff       	sbrs	r18, 2
    1010:	16 c0       	rjmp	.+44     	; 0x103e <fputc+0x46>
    1012:	46 81       	ldd	r20, Z+6	; 0x06
    1014:	57 81       	ldd	r21, Z+7	; 0x07
    1016:	24 81       	ldd	r18, Z+4	; 0x04
    1018:	35 81       	ldd	r19, Z+5	; 0x05
    101a:	42 17       	cp	r20, r18
    101c:	53 07       	cpc	r21, r19
    101e:	44 f4       	brge	.+16     	; 0x1030 <fputc+0x38>
    1020:	a0 81       	ld	r26, Z
    1022:	b1 81       	ldd	r27, Z+1	; 0x01
    1024:	9d 01       	movw	r18, r26
    1026:	2f 5f       	subi	r18, 0xFF	; 255
    1028:	3f 4f       	sbci	r19, 0xFF	; 255
    102a:	31 83       	std	Z+1, r19	; 0x01
    102c:	20 83       	st	Z, r18
    102e:	8c 93       	st	X, r24
    1030:	26 81       	ldd	r18, Z+6	; 0x06
    1032:	37 81       	ldd	r19, Z+7	; 0x07
    1034:	2f 5f       	subi	r18, 0xFF	; 255
    1036:	3f 4f       	sbci	r19, 0xFF	; 255
    1038:	37 83       	std	Z+7, r19	; 0x07
    103a:	26 83       	std	Z+6, r18	; 0x06
    103c:	14 c0       	rjmp	.+40     	; 0x1066 <fputc+0x6e>
    103e:	8b 01       	movw	r16, r22
    1040:	ec 01       	movw	r28, r24
    1042:	fb 01       	movw	r30, r22
    1044:	00 84       	ldd	r0, Z+8	; 0x08
    1046:	f1 85       	ldd	r31, Z+9	; 0x09
    1048:	e0 2d       	mov	r30, r0
    104a:	09 95       	icall
    104c:	89 2b       	or	r24, r25
    104e:	e1 f6       	brne	.-72     	; 0x1008 <fputc+0x10>
    1050:	d8 01       	movw	r26, r16
    1052:	16 96       	adiw	r26, 0x06	; 6
    1054:	8d 91       	ld	r24, X+
    1056:	9c 91       	ld	r25, X
    1058:	17 97       	sbiw	r26, 0x07	; 7
    105a:	01 96       	adiw	r24, 0x01	; 1
    105c:	17 96       	adiw	r26, 0x07	; 7
    105e:	9c 93       	st	X, r25
    1060:	8e 93       	st	-X, r24
    1062:	16 97       	sbiw	r26, 0x06	; 6
    1064:	ce 01       	movw	r24, r28
    1066:	df 91       	pop	r29
    1068:	cf 91       	pop	r28
    106a:	1f 91       	pop	r17
    106c:	0f 91       	pop	r16
    106e:	08 95       	ret

00001070 <__ultoa_invert>:
    1070:	fa 01       	movw	r30, r20
    1072:	aa 27       	eor	r26, r26
    1074:	28 30       	cpi	r18, 0x08	; 8
    1076:	51 f1       	breq	.+84     	; 0x10cc <__ultoa_invert+0x5c>
    1078:	20 31       	cpi	r18, 0x10	; 16
    107a:	81 f1       	breq	.+96     	; 0x10dc <__ultoa_invert+0x6c>
    107c:	e8 94       	clt
    107e:	6f 93       	push	r22
    1080:	6e 7f       	andi	r22, 0xFE	; 254
    1082:	6e 5f       	subi	r22, 0xFE	; 254
    1084:	7f 4f       	sbci	r23, 0xFF	; 255
    1086:	8f 4f       	sbci	r24, 0xFF	; 255
    1088:	9f 4f       	sbci	r25, 0xFF	; 255
    108a:	af 4f       	sbci	r26, 0xFF	; 255
    108c:	b1 e0       	ldi	r27, 0x01	; 1
    108e:	3e d0       	rcall	.+124    	; 0x110c <__ultoa_invert+0x9c>
    1090:	b4 e0       	ldi	r27, 0x04	; 4
    1092:	3c d0       	rcall	.+120    	; 0x110c <__ultoa_invert+0x9c>
    1094:	67 0f       	add	r22, r23
    1096:	78 1f       	adc	r23, r24
    1098:	89 1f       	adc	r24, r25
    109a:	9a 1f       	adc	r25, r26
    109c:	a1 1d       	adc	r26, r1
    109e:	68 0f       	add	r22, r24
    10a0:	79 1f       	adc	r23, r25
    10a2:	8a 1f       	adc	r24, r26
    10a4:	91 1d       	adc	r25, r1
    10a6:	a1 1d       	adc	r26, r1
    10a8:	6a 0f       	add	r22, r26
    10aa:	71 1d       	adc	r23, r1
    10ac:	81 1d       	adc	r24, r1
    10ae:	91 1d       	adc	r25, r1
    10b0:	a1 1d       	adc	r26, r1
    10b2:	20 d0       	rcall	.+64     	; 0x10f4 <__ultoa_invert+0x84>
    10b4:	09 f4       	brne	.+2      	; 0x10b8 <__ultoa_invert+0x48>
    10b6:	68 94       	set
    10b8:	3f 91       	pop	r19
    10ba:	2a e0       	ldi	r18, 0x0A	; 10
    10bc:	26 9f       	mul	r18, r22
    10be:	11 24       	eor	r1, r1
    10c0:	30 19       	sub	r19, r0
    10c2:	30 5d       	subi	r19, 0xD0	; 208
    10c4:	31 93       	st	Z+, r19
    10c6:	de f6       	brtc	.-74     	; 0x107e <__ultoa_invert+0xe>
    10c8:	cf 01       	movw	r24, r30
    10ca:	08 95       	ret
    10cc:	46 2f       	mov	r20, r22
    10ce:	47 70       	andi	r20, 0x07	; 7
    10d0:	40 5d       	subi	r20, 0xD0	; 208
    10d2:	41 93       	st	Z+, r20
    10d4:	b3 e0       	ldi	r27, 0x03	; 3
    10d6:	0f d0       	rcall	.+30     	; 0x10f6 <__ultoa_invert+0x86>
    10d8:	c9 f7       	brne	.-14     	; 0x10cc <__ultoa_invert+0x5c>
    10da:	f6 cf       	rjmp	.-20     	; 0x10c8 <__ultoa_invert+0x58>
    10dc:	46 2f       	mov	r20, r22
    10de:	4f 70       	andi	r20, 0x0F	; 15
    10e0:	40 5d       	subi	r20, 0xD0	; 208
    10e2:	4a 33       	cpi	r20, 0x3A	; 58
    10e4:	18 f0       	brcs	.+6      	; 0x10ec <__ultoa_invert+0x7c>
    10e6:	49 5d       	subi	r20, 0xD9	; 217
    10e8:	31 fd       	sbrc	r19, 1
    10ea:	40 52       	subi	r20, 0x20	; 32
    10ec:	41 93       	st	Z+, r20
    10ee:	02 d0       	rcall	.+4      	; 0x10f4 <__ultoa_invert+0x84>
    10f0:	a9 f7       	brne	.-22     	; 0x10dc <__ultoa_invert+0x6c>
    10f2:	ea cf       	rjmp	.-44     	; 0x10c8 <__ultoa_invert+0x58>
    10f4:	b4 e0       	ldi	r27, 0x04	; 4
    10f6:	a6 95       	lsr	r26
    10f8:	97 95       	ror	r25
    10fa:	87 95       	ror	r24
    10fc:	77 95       	ror	r23
    10fe:	67 95       	ror	r22
    1100:	ba 95       	dec	r27
    1102:	c9 f7       	brne	.-14     	; 0x10f6 <__ultoa_invert+0x86>
    1104:	00 97       	sbiw	r24, 0x00	; 0
    1106:	61 05       	cpc	r22, r1
    1108:	71 05       	cpc	r23, r1
    110a:	08 95       	ret
    110c:	9b 01       	movw	r18, r22
    110e:	ac 01       	movw	r20, r24
    1110:	0a 2e       	mov	r0, r26
    1112:	06 94       	lsr	r0
    1114:	57 95       	ror	r21
    1116:	47 95       	ror	r20
    1118:	37 95       	ror	r19
    111a:	27 95       	ror	r18
    111c:	ba 95       	dec	r27
    111e:	c9 f7       	brne	.-14     	; 0x1112 <__ultoa_invert+0xa2>
    1120:	62 0f       	add	r22, r18
    1122:	73 1f       	adc	r23, r19
    1124:	84 1f       	adc	r24, r20
    1126:	95 1f       	adc	r25, r21
    1128:	a0 1d       	adc	r26, r0
    112a:	08 95       	ret

0000112c <__prologue_saves__>:
    112c:	2f 92       	push	r2
    112e:	3f 92       	push	r3
    1130:	4f 92       	push	r4
    1132:	5f 92       	push	r5
    1134:	6f 92       	push	r6
    1136:	7f 92       	push	r7
    1138:	8f 92       	push	r8
    113a:	9f 92       	push	r9
    113c:	af 92       	push	r10
    113e:	bf 92       	push	r11
    1140:	cf 92       	push	r12
    1142:	df 92       	push	r13
    1144:	ef 92       	push	r14
    1146:	ff 92       	push	r15
    1148:	0f 93       	push	r16
    114a:	1f 93       	push	r17
    114c:	cf 93       	push	r28
    114e:	df 93       	push	r29
    1150:	cd b7       	in	r28, 0x3d	; 61
    1152:	de b7       	in	r29, 0x3e	; 62
    1154:	ca 1b       	sub	r28, r26
    1156:	db 0b       	sbc	r29, r27
    1158:	0f b6       	in	r0, 0x3f	; 63
    115a:	f8 94       	cli
    115c:	de bf       	out	0x3e, r29	; 62
    115e:	0f be       	out	0x3f, r0	; 63
    1160:	cd bf       	out	0x3d, r28	; 61
    1162:	09 94       	ijmp

00001164 <__epilogue_restores__>:
    1164:	2a 88       	ldd	r2, Y+18	; 0x12
    1166:	39 88       	ldd	r3, Y+17	; 0x11
    1168:	48 88       	ldd	r4, Y+16	; 0x10
    116a:	5f 84       	ldd	r5, Y+15	; 0x0f
    116c:	6e 84       	ldd	r6, Y+14	; 0x0e
    116e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1170:	8c 84       	ldd	r8, Y+12	; 0x0c
    1172:	9b 84       	ldd	r9, Y+11	; 0x0b
    1174:	aa 84       	ldd	r10, Y+10	; 0x0a
    1176:	b9 84       	ldd	r11, Y+9	; 0x09
    1178:	c8 84       	ldd	r12, Y+8	; 0x08
    117a:	df 80       	ldd	r13, Y+7	; 0x07
    117c:	ee 80       	ldd	r14, Y+6	; 0x06
    117e:	fd 80       	ldd	r15, Y+5	; 0x05
    1180:	0c 81       	ldd	r16, Y+4	; 0x04
    1182:	1b 81       	ldd	r17, Y+3	; 0x03
    1184:	aa 81       	ldd	r26, Y+2	; 0x02
    1186:	b9 81       	ldd	r27, Y+1	; 0x01
    1188:	ce 0f       	add	r28, r30
    118a:	d1 1d       	adc	r29, r1
    118c:	0f b6       	in	r0, 0x3f	; 63
    118e:	f8 94       	cli
    1190:	de bf       	out	0x3e, r29	; 62
    1192:	0f be       	out	0x3f, r0	; 63
    1194:	cd bf       	out	0x3d, r28	; 61
    1196:	ed 01       	movw	r28, r26
    1198:	08 95       	ret

0000119a <_exit>:
    119a:	f8 94       	cli

0000119c <__stop_program>:
    119c:	ff cf       	rjmp	.-2      	; 0x119c <__stop_program>
